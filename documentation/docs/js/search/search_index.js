var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AgoraConfig.html",[0,0.337,1,2.498]],["body/interfaces/AgoraConfig.html",[0,0.264,1,3.391,2,0.142,3,0.167,4,0.167,5,0.142,6,2.225,7,0.096,8,0.174,9,5.111,10,5.009,11,4.292,12,5.425,13,0.83,14,0.183,15,0.027,16,1.512,17,0.333,18,2.865,19,1.466,20,2.529,21,3.861,22,0.682,23,3.861,24,2.635,25,2.635,26,2.635,27,3.861,28,0.677,29,2.865,30,2.635,31,1.753,32,2.635,33,1.753,34,2.635,35,2.635,36,2.635,37,2.635,38,1.067,39,3.261,40,2.635,41,2.635,42,2.635,43,1.154,44,2.569,45,2.635,46,1.955,47,2.635,48,2.865,49,2.635,50,2.865,51,3.261,52,3.861,53,4.57,54,3.861,55,3.861,56,1.573,57,2.635,58,2.635,59,2.635,60,2.001,61,2.635,62,2.635,63,2.635,64,2.635,65,3.861,66,2.635,67,2.635,68,3.861,69,4.57,70,5.599,71,0.907,72,2.635,73,2.635,74,2.635,75,2.635,76,2.635,77,4.57,78,3.861,79,2.635,80,2.635,81,3.861,82,2.635,83,2.635,84,3.861,85,3.261,86,2.225,87,3.861,88,2.635,89,2.635,90,2.635,91,2.635,92,2.635,93,0.872,94,2.635,95,2.635,96,2.635,97,3.861,98,1.458,99,2.635,100,2.635,101,2.635,102,2.225,103,1.458,104,2.529,105,2.635,106,2.865,107,3.861,108,3.861,109,2.865,110,2.225,111,2.529,112,2.635,113,2.865,114,2.635,115,3.261,116,2.635,117,2.635,118,3.261,119,2.635,120,4.57,121,2.635,122,2.635,123,1.753,124,2.635,125,0.167,126,0.536,127,0.015,128,0.015]],["title/interfaces/AudioCallScreenProps.html",[0,0.337,129,2.498]],["body/interfaces/AudioCallScreenProps.html",[0,0.282,2,0.152,3,0.178,4,0.178,5,0.152,7,0.102,8,0.182,14,0.102,15,0.027,17,0.46,19,1.069,20,3.044,22,0.775,28,0.493,38,1.052,43,1.774,44,2.696,48,3.521,50,3.006,56,1.147,60,1.232,71,0.769,106,3.851,109,2.088,113,2.088,125,0.178,126,0.573,127,0.016,128,0.016,129,3.006,130,2.377,131,3.044,132,2.646,133,0.87,134,0.456,135,0.709,136,1.328,137,2.377,138,1.911,139,1.232,140,3.421,141,1.873,142,1.873,143,2.377,144,0.661,145,0.709,146,1.435,147,1.558,148,1.873,149,2.377,150,2.088,151,1.873,152,2.088,153,2.377,154,1.701,155,1.232,156,3.421,157,0.661,158,1.147,159,0.951,160,1.558,161,0.87,162,1.37,163,3.006,164,2.377,165,3.006,166,2.377,167,4.837,168,2.377,169,2.377,170,3.421,171,2.377,172,2.377,173,3.006,174,1.069,175,1.069,176,2.815,177,2.377,178,2.815,179,2.815,180,2.377,181,2.815,182,1.701,183,2.377,184,3.006,185,2.377,186,2.815,187,2.377,188,3.421,189,2.377,190,2.377,191,2.377,192,2.377,193,1.538,194,2.088,195,2.377,196,2.377,197,2.088,198,1.069,199,2.377,200,2.377,201,2.377,202,2.377,203,2.377,204,2.377,205,2.088,206,2.377,207,0.709,208,0.759,209,1.069,210,1.069,211,1.093,212,1.28,213,0.931,214,1.069,215,2.646,216,2.377,217,1.701,218,2.815,219,2.449,220,1.701,221,0.87,222,0.87,223,3.006,224,0.87,225,0.759,226,2.088,227,1.873,228,2.088,229,1.435,230,1.328,231,2.088,232,1.435,233,2.377,234,1.069,235,1.328,236,1.252,237,0.931,238,0.87,239,2.088,240,1.873,241,2.377,242,1.328,243,1.328,244,2.088,245,1.558,246,1.701,247,1.147,248,2.696,249,1.873]],["title/interfaces/AuthContextProps.html",[0,0.337,250,2.498]],["body/interfaces/AuthContextProps.html",[0,0.362,2,0.195,3,0.228,4,0.228,5,0.195,7,0.131,8,0.217,11,4.872,13,0.825,14,0.219,15,0.027,17,0.35,19,1.828,22,0.719,28,0.633,33,2.403,38,1.003,56,1.962,60,1.581,71,0.975,98,1.999,103,1.999,104,1.999,111,2.998,123,3.204,125,0.305,127,0.018,128,0.018,250,3.573,251,2.679,252,6.191,253,6.32,254,6.019,255,6.32,256,1.449,257,2.679,258,2.679,259,3.05,260,2.679,261,2.182,262,3.05,263,1.212,264,3.05,265,3.611,266,3.573,267,3.605,268,2.182,269,5.779,270,3.611,271,3.611,272,3.611,273,3.611,274,3.611,275,3.611,276,3.611,277,3.611,278,2.182,279,2.679,280,3.605,281,3.611,282,2.679,283,1.999,284,3.611,285,2.679]],["title/interfaces/ButtonProps.html",[0,0.337,286,2.498]],["body/interfaces/ButtonProps.html",[0,0.306,2,0.165,3,0.193,4,0.193,5,0.165,7,0.111,8,0.193,13,0.86,14,0.239,15,0.027,16,2.041,17,0.361,22,0.741,28,0.535,38,0.979,71,0.495,111,2.747,125,0.193,126,0.622,127,0.016,128,0.016,134,0.495,135,0.769,144,0.717,145,0.769,157,0.717,194,3.185,207,0.769,208,0.824,211,0.824,212,1.158,213,1.01,222,1.868,224,1.868,225,1.339,227,2.032,229,2.893,232,1.082,234,1.159,236,1.534,239,2.266,248,2.032,256,0.939,263,0.769,286,3.185,287,2.579,288,2.702,289,5.674,290,4.21,291,2.085,292,5.674,293,5.385,294,5.385,295,4.964,296,1.557,297,4.293,298,3.054,299,3.625,300,3.625,301,1.69,302,2.342,303,4.293,304,3.054,305,3.054,306,3.054,307,3.054,308,3.054,309,3.054,310,4.293,311,2.342,312,3.054,313,2.266,314,3.054,315,2.154,316,3.185,317,3.054,318,2.376,319,3.054,320,4.293,321,3.054,322,4.293,323,3.054,324,4.293,325,3.185,326,2.579,327,1.441,328,2.579,329,3.054]],["title/interfaces/CallData.html",[0,0.337,159,0.791]],["body/interfaces/CallData.html",[0,0.644,2,0.197,3,0.231,4,0.231,5,0.197,7,0.176,8,0.218,13,0.961,14,0.211,15,0.027,16,1.919,17,0.265,93,1.919,125,0.412,127,0.019,128,0.019,134,0.591,159,1.138,161,1.793,162,1.675,174,1.384,175,1.384,198,1.384,221,1.127,291,1.291,330,1.485,331,1.997,332,2.139,333,2.055,334,2.055,335,2.567,336,1.596,337,1.291,338,1.497,339,1.596,340,1.72,341,1.485,342,1.716,343,1.206,344,2.736,345,1.291,346,1.596,347,1.291,348,1.596,349,1.72,350,1.72,351,1.72,352,1.974,353,1.485,354,1.291,355,1.291,356,1.72,357,1.72,358,1.72,359,1.206,360,1.72,361,1.72,362,1.72,363,1.974,364,1.485,365,1.485,366,1.384,367,1.72,368,1.72]],["title/interfaces/CallSession.html",[0,0.337,366,1.278]],["body/interfaces/CallSession.html",[0,0.639,2,0.19,3,0.223,4,0.223,5,0.19,7,0.172,8,0.213,13,0.962,14,0.228,15,0.027,16,1.892,17,0.256,93,2.077,125,0.409,127,0.018,128,0.018,134,0.57,159,0.827,161,1.088,162,1.016,174,1.336,175,1.336,198,1.336,221,1.088,291,1.247,330,1.434,331,1.974,332,1.894,333,2.026,334,2.026,335,2.523,336,1.541,337,1.247,338,1.463,339,1.541,340,1.66,341,1.434,342,1.677,343,1.164,344,2.962,345,1.247,346,1.541,347,1.247,348,1.541,349,1.66,350,1.66,351,1.66,352,2.431,353,1.434,354,1.247,355,1.247,356,1.66,357,1.66,358,1.66,359,1.164,360,1.66,361,1.66,362,1.66,363,2.33,364,1.434,365,1.434,366,1.797,367,2.698,368,2.698]],["title/interfaces/CallSessionProps.html",[0,0.337,369,2.498]],["body/interfaces/CallSessionProps.html",[0,0.362,2,0.195,3,0.229,4,0.229,5,0.195,7,0.132,8,0.217,14,0.175,15,0.027,17,0.451,19,1.374,20,2.668,22,0.81,33,2.408,38,1.024,71,0.878,123,3.848,125,0.305,127,0.018,128,0.018,138,2.274,139,1.584,142,2.408,155,1.584,158,1.964,159,1.415,162,1.045,173,4.023,182,2.186,256,1.265,257,3.577,258,2.684,263,0.911,267,3.608,268,2.186,278,2.186,280,3.608,282,2.684,283,2.002,285,2.684,343,1.595,366,2.287,369,3.577,370,2.684,371,6.323,372,6.323,373,2.458,374,2.408,375,1.584,376,3.055,377,1.845,378,3.055,379,2.408,380,3.577,381,3.618,382,3.618,383,4.821,384,2.408,385,2.186,386,3.618,387,2.186,388,2.684,389,3.618,390,3.618]],["title/interfaces/ChatHeaderProps.html",[0,0.337,391,1.863]],["body/interfaces/ChatHeaderProps.html",[0,0.429,2,0.128,3,0.15,4,0.15,5,0.128,7,0.086,8,0.161,13,0.806,14,0.156,15,0.027,17,0.454,19,1.353,22,0.764,28,0.414,31,1.574,38,1.029,56,0.963,60,1.56,71,0.773,93,0.782,98,1.309,103,1.309,104,2.373,125,0.15,126,0.481,127,0.014,128,0.014,131,1.309,132,1.817,133,0.731,134,0.383,135,0.595,136,1.116,138,2.022,139,1.036,144,0.555,145,0.595,146,1.206,147,1.309,155,1.036,157,1.007,158,1.452,159,0.555,160,1.309,161,0.731,162,1.238,193,1.353,207,0.595,208,0.638,209,0.898,210,1.628,211,1.156,212,1.156,213,0.782,214,0.898,220,1.429,221,0.731,222,1.101,224,1.101,225,1.156,229,1.206,230,1.116,232,1.262,234,0.898,235,1.116,236,1.101,237,1.179,238,1.776,242,1.116,243,1.116,247,1.747,263,0.595,301,1.972,311,1.116,315,1.944,327,1.116,331,1.694,333,1.519,334,1.262,338,0.731,342,1.262,343,1.78,354,2.083,355,2.036,359,1.579,373,1.817,375,1.036,377,1.206,384,1.574,385,2.153,387,2.153,391,2.373,392,1.429,393,1.574,394,1.755,395,2.644,396,1.755,397,1.309,398,1.755,399,1.574,400,1.755,401,1.574,402,1.574,403,1.755,404,1.429,405,1.755,406,1.206,407,1.755,408,2.644,409,1.574,410,1.574,411,1.755,412,1.755,413,1.755,414,1.429,415,2.433,416,1.574,417,1.755,418,1.755,419,1.755,420,1.755,421,1.429,422,2.153,423,2.371,424,2.644,425,2.644,426,2.371,427,2.644,428,1.755,429,1.755,430,1.755,431,1.574,432,1.574,433,1.755,434,1.755,435,1.755,436,1.429,437,1.755,438,1.574,439,1.755,440,3.181,441,1.574,442,1.519,443,1.519,444,1.116,445,1.429,446,2.153,447,1.755,448,2.153,449,1.755,450,1.206,451,1.574,452,1.574,453,1.755,454,2.853,455,1.755,456,1.755,457,1.755,458,1.755,459,1.429,460,1.755,461,1.429,462,1.309,463,1.755,464,1.755,465,1.755,466,2.371,467,1.574,468,1.755,469,1.429,470,1.755,471,1.755,472,1.574,473,1.755,474,1.429]],["title/interfaces/ChatHeaderProps-1.html",[0,0.282,193,1.068,391,1.556]],["body/interfaces/ChatHeaderProps-1.html",[0,0.427,2,0.127,3,0.148,4,0.148,5,0.127,7,0.085,8,0.16,13,0.804,14,0.173,15,0.027,17,0.453,19,1.344,22,0.762,28,0.411,31,1.56,38,1.028,56,0.955,60,1.55,71,0.77,93,0.776,98,1.298,103,1.298,104,2.361,125,0.148,126,0.477,127,0.014,128,0.014,131,1.298,132,1.805,133,0.725,134,0.38,135,0.59,136,1.106,138,2.012,139,1.027,144,0.551,145,0.59,146,1.196,147,1.298,155,1.027,157,1.002,158,1.442,159,0.551,160,1.298,161,0.725,162,1.232,193,1.344,207,0.59,208,0.632,209,0.89,210,1.619,211,1.15,212,1.15,213,0.776,214,0.89,220,1.417,221,0.725,222,1.094,224,1.094,225,1.15,229,1.196,230,1.106,232,1.254,234,0.89,235,1.106,236,1.094,237,1.171,238,1.772,242,1.106,243,1.106,247,1.738,256,0.775,263,0.59,301,1.959,311,1.106,315,1.937,327,1.106,331,1.688,333,1.511,334,1.254,338,0.725,342,1.254,343,1.774,354,2.078,355,2.031,359,1.572,373,1.805,375,1.027,377,1.196,384,1.56,385,2.14,387,2.14,391,2.361,392,1.417,393,1.56,394,1.74,395,2.627,396,1.74,397,1.298,398,1.74,399,1.56,400,1.74,401,1.56,402,1.56,403,1.74,404,1.417,405,1.74,406,1.196,407,1.74,408,3.785,409,1.56,410,1.56,411,1.74,412,1.74,413,1.74,414,1.417,415,2.423,416,1.56,417,1.74,418,1.74,419,1.74,420,1.74,421,1.417,422,2.14,423,2.356,424,2.627,425,2.627,426,2.356,427,2.627,428,1.74,429,1.74,430,1.74,431,1.56,432,1.56,433,1.74,434,1.74,435,1.74,436,1.417,437,1.74,438,1.56,439,1.74,440,3.165,441,1.56,442,1.511,443,1.511,444,1.106,445,1.417,446,2.14,447,1.74,448,2.14,449,1.74,450,1.196,451,1.56,452,1.56,453,1.74,454,2.838,455,1.74,456,1.74,457,1.74,458,1.74,459,1.417,460,1.74,461,1.417,462,1.298,463,1.74,464,1.74,465,1.74,466,2.356,467,1.56,468,1.74,469,1.417,470,1.74,471,1.74,472,1.56,473,1.74,474,1.417]],["title/interfaces/ChatItem.html",[0,0.337,353,1.371]],["body/interfaces/ChatItem.html",[0,0.636,2,0.186,3,0.217,4,0.217,5,0.186,7,0.169,8,0.21,13,0.963,14,0.231,15,0.027,16,2.153,17,0.25,93,1.874,125,0.407,127,0.018,128,0.018,134,0.557,159,0.808,161,1.063,162,0.993,174,1.305,175,1.305,198,1.305,221,1.063,288,2.78,291,1.218,330,1.401,331,1.541,332,1.872,333,1.651,334,1.651,335,2.493,336,1.505,337,1.218,338,1.44,339,1.505,340,1.622,341,1.401,342,2.097,343,1.137,344,2.944,345,1.218,346,1.505,347,1.218,348,1.505,349,1.622,350,1.622,351,1.622,352,1.898,353,1.898,354,2.007,355,2.007,356,2.672,357,2.672,358,2.672,359,1.137,360,1.622,361,1.622,362,1.622,363,1.898,364,1.401,365,1.401,366,1.305,367,1.622,368,1.622]],["title/interfaces/ChatMessageItemProps.html",[0,0.337,414,2.034]],["body/interfaces/ChatMessageItemProps.html",[0,0.429,2,0.128,3,0.15,4,0.15,5,0.128,7,0.086,8,0.161,13,0.766,14,0.156,15,0.027,17,0.454,19,1.353,22,0.764,28,0.414,31,1.574,38,1.029,56,0.963,60,1.56,71,0.773,93,0.782,98,1.309,103,1.309,104,2.373,125,0.15,126,0.481,127,0.014,128,0.014,131,1.309,132,1.817,133,0.731,134,0.383,135,0.595,136,1.116,138,2.022,139,1.036,144,0.555,145,0.595,146,1.206,147,1.309,155,1.036,157,1.007,158,1.452,159,0.555,160,1.309,161,0.731,162,1.238,193,1.353,207,0.595,208,0.638,209,0.898,210,1.628,211,1.156,212,1.156,213,0.782,214,0.898,220,1.429,221,0.731,222,1.101,224,1.101,225,1.156,229,1.206,230,1.116,232,1.262,234,0.898,235,1.116,236,1.101,237,1.179,238,1.776,242,1.116,243,1.116,247,1.747,263,0.595,301,1.972,311,1.116,315,1.944,327,1.116,331,1.694,333,1.519,334,1.262,338,0.731,342,1.262,343,1.946,354,1.906,355,1.814,359,1.78,373,1.817,375,1.036,377,1.206,384,1.574,385,2.153,387,2.153,391,1.972,392,1.429,393,1.574,394,1.755,395,2.644,396,1.755,397,1.309,398,1.755,399,1.574,400,1.755,401,1.574,402,1.574,403,1.755,404,1.429,405,1.755,406,1.206,407,1.755,408,2.644,409,1.574,410,1.574,411,1.755,412,1.755,413,1.755,414,2.153,415,2.847,416,1.574,417,1.755,418,1.755,419,1.755,420,1.755,421,1.429,422,2.153,423,2.371,424,2.644,425,2.644,426,2.371,427,2.644,428,1.755,429,1.755,430,1.755,431,1.574,432,1.574,433,1.755,434,1.755,435,1.755,436,1.429,437,1.755,438,1.574,439,1.755,440,3.181,441,1.574,442,1.519,443,1.519,444,1.116,445,1.429,446,2.153,447,1.755,448,2.153,449,1.755,450,1.206,451,1.574,452,1.574,453,1.755,454,2.853,455,1.755,456,1.755,457,1.755,458,1.755,459,1.429,460,1.755,461,1.429,462,1.309,463,1.755,464,1.755,465,1.755,466,2.371,467,1.574,468,1.755,469,1.429,470,1.755,471,1.755,472,1.574,473,1.755,474,1.429]],["title/interfaces/Contact.html",[0,0.337,332,1.193]],["body/interfaces/Contact.html",[0,0.642,2,0.193,3,0.226,4,0.226,5,0.193,7,0.174,8,0.216,13,0.965,14,0.224,15,0.027,16,1.905,17,0.26,93,1.905,125,0.41,127,0.018,128,0.018,134,0.58,159,0.84,161,1.106,162,1.033,174,1.358,175,1.358,198,1.358,221,1.779,291,1.268,330,1.458,331,1.583,332,2.039,333,1.695,334,1.695,335,2.831,336,1.567,337,1.268,338,1.855,339,1.567,340,1.688,341,1.458,342,2.126,343,1.905,344,2.974,345,1.268,346,1.567,347,1.268,348,1.567,349,1.688,350,1.688,351,1.688,352,1.949,353,1.458,354,1.268,355,1.268,356,1.688,357,1.688,358,1.688,359,1.184,360,1.688,361,1.688,362,1.688,363,1.949,364,1.458,365,1.458,366,1.358,367,1.688,368,1.688]],["title/interfaces/ContactSectionProps.html",[0,0.337,475,2.24]],["body/interfaces/ContactSectionProps.html",[0,0.165,2,0.089,3,0.104,4,0.104,5,0.089,7,0.223,8,0.121,13,0.466,14,0.098,15,0.027,16,1.124,17,0.41,18,1.225,19,1.02,20,1.487,22,0.728,28,0.686,38,1.081,43,1.888,46,1.225,71,0.929,102,1.394,125,0.248,126,0.336,127,0.01,128,0.01,133,0.51,134,0.435,135,0.416,136,0.779,138,1.268,139,0.723,144,0.388,145,0.416,151,1.098,155,0.723,158,0.672,174,0.627,193,2.05,207,0.677,208,0.445,209,0.627,210,0.627,211,0.445,212,0.917,213,0.889,214,0.627,215,0.841,217,0.997,222,1.05,224,1.333,225,0.445,227,1.098,228,1.225,229,0.841,230,1.603,232,0.585,234,0.627,236,1.05,237,0.889,238,1.05,242,0.779,243,0.779,244,1.225,245,0.913,246,1.624,248,1.098,249,1.098,256,0.857,283,0.913,291,1.388,296,0.841,301,0.913,302,0.779,311,2.034,313,3.199,332,1.799,342,0.585,345,1.527,346,1.176,354,0.952,355,0.952,375,0.723,377,0.841,385,0.997,387,0.997,397,0.913,410,1.098,415,1.997,422,0.997,423,2.261,436,0.997,441,1.788,442,0.952,443,0.952,444,0.779,445,0.997,451,1.098,454,1.098,459,0.997,462,1.487,475,2.261,476,1.098,477,3.903,478,3.399,479,1.651,480,2.687,481,4.115,482,2.269,483,1.394,484,2.87,485,1.651,486,1.394,487,2.687,488,3.399,489,1.651,490,3.399,491,1.651,492,1.651,493,2.687,494,2.687,495,2.687,496,3.399,497,1.651,498,1.651,499,1.394,500,0.913,501,0.913,502,0.841,503,2.269,504,1.394,505,1.651,506,2.269,507,3.641,508,2.87,509,2.87,510,1.394,511,4.115,512,1.394,513,1.651,514,1.394,515,1.651,516,1.225,517,1.994,518,3.917,519,3.399,520,1.394,521,1.651,522,4.312,523,3.399,524,2.687,525,2.269,526,1.651,527,1.651,528,1.651,529,1.394,530,1.651,531,1.651,532,1.651,533,1.651,534,2.687,535,1.651,536,2.687,537,1.651,538,1.651,539,1.651,540,1.651,541,1.225,542,1.225,543,2.687,544,1.651,545,1.651,546,2.687,547,1.651,548,1.994,549,1.651,550,1.651,551,1.651,552,1.651,553,3.399,554,1.651,555,1.651,556,1.651,557,1.651,558,1.651,559,3.917,560,2.687,561,1.651,562,1.651,563,2.687,564,1.651,565,1.651,566,1.651,567,1.651,568,3.917,569,3.917,570,2.687,571,3.917,572,3.399,573,2.687,574,2.687,575,1.651,576,4.312,577,1.651,578,1.651,579,1.651,580,1.651,581,1.651,582,1.651,583,2.687,584,3.399,585,2.687,586,2.269,587,1.651,588,1.651,589,1.651,590,1.651,591,1.651,592,1.651,593,1.651,594,1.651,595,1.651,596,1.651,597,1.651,598,3.399,599,1.651,600,1.651,601,1.651,602,1.651,603,2.687,604,1.651,605,1.651,606,1.651,607,1.651,608,1.651,609,1.651,610,1.651,611,1.651,612,1.651,613,1.651,614,1.651,615,2.687,616,1.651,617,1.651,618,1.651,619,1.651,620,2.687,621,1.651,622,1.651,623,1.394,624,1.651,625,1.651,626,1.394,627,1.651,628,1.651,629,1.651,630,2.269,631,1.651,632,1.651,633,0.997,634,1.651,635,1.651,636,1.651,637,1.651,638,1.225,639,0.841,640,1.394,641,2.687,642,1.394,643,1.651,644,1.651,645,1.651]],["title/interfaces/ContactSectionsType.html",[0,0.337,345,1.193]],["body/interfaces/ContactSectionsType.html",[0,0.644,2,0.196,3,0.229,4,0.229,5,0.196,7,0.219,8,0.217,13,0.962,14,0.219,15,0.027,16,2.05,17,0.264,93,1.914,125,0.411,127,0.018,128,0.018,134,0.587,159,0.851,161,1.12,162,1.047,174,2.197,175,1.376,198,1.376,221,1.12,291,2.05,330,1.477,331,1.597,332,2.135,333,1.71,334,1.71,335,2.56,336,1.587,337,1.284,338,1.492,339,1.587,340,1.71,341,1.477,342,1.71,343,1.199,344,2.73,345,1.71,346,2.534,347,1.284,348,1.587,349,1.71,350,1.71,351,1.71,352,1.966,353,1.477,354,1.284,355,1.284,356,1.71,357,1.71,358,1.71,359,1.199,360,1.71,361,1.71,362,1.71,363,1.966,364,1.477,365,1.477,366,1.376,367,1.71,368,1.71]],["title/interfaces/DefaultCallControlsProps.html",[0,0.337,646,2.498]],["body/interfaces/DefaultCallControlsProps.html",[0,0.371,2,0.2,3,0.234,4,0.234,5,0.2,7,0.135,8,0.221,14,0.221,15,0.027,17,0.425,22,0.819,28,0.65,38,0.794,71,0.601,110,3.131,111,3.452,125,0.234,126,0.755,127,0.019,128,0.019,133,1.146,135,0.934,144,0.871,145,0.934,148,3.261,157,0.871,163,4.505,165,4.505,182,2.241,207,0.934,208,1,211,1,212,1.322,213,1.621,214,1.408,217,2.241,219,1.749,222,1.146,224,1.146,225,1,238,1.146,240,2.467,247,1.51,256,1.365,263,1.382,296,1.89,302,2.589,315,2.217,316,2.751,318,2.052,325,2.751,442,1.314,443,1.736,444,1.749,450,1.89,467,2.467,500,2.052,501,2.052,502,1.89,638,3.636,646,3.636,647,3.131,648,6.072,649,6.072,650,6.072,651,3.708,652,2.751,653,3.131,654,3.131,655,3.131,656,3.708,657,3.708]],["title/interfaces/FlatButtonProps.html",[0,0.337,658,2.498]],["body/interfaces/FlatButtonProps.html",[0,0.423,2,0.228,3,0.267,4,0.267,5,0.228,7,0.154,8,0.24,13,0.886,14,0.212,15,0.027,17,0.425,22,0.872,28,0.74,38,0.864,43,1.85,71,0.684,125,0.267,126,0.86,127,0.02,128,0.02,134,0.684,135,1.064,144,0.992,145,1.064,157,0.992,207,1.064,208,1.139,211,1.139,212,1.438,213,1.398,225,1.139,232,1.497,236,1.996,237,1.398,238,1.306,247,1.721,256,1.167,263,1.064,288,2.334,290,4.693,291,2.288,296,2.154,302,1.993,326,3.568,327,1.993,446,2.553,642,3.568,658,3.956,659,3.568,660,3.956]],["title/interfaces/FlatTextInputProps.html",[0,0.337,661,2.498]],["body/interfaces/FlatTextInputProps.html",[0,0.314,2,0.169,3,0.198,4,0.198,5,0.169,7,0.114,8,0.197,13,0.876,14,0.221,15,0.027,16,1.666,17,0.367,18,2.328,22,0.752,28,0.55,38,0.962,43,1.916,46,2.328,71,0.508,111,2.788,125,0.198,126,0.639,127,0.017,128,0.017,133,0.97,134,0.816,135,0.79,144,0.737,145,0.79,157,0.737,193,1.191,207,0.79,208,0.846,209,1.191,210,1.191,211,0.846,212,1.47,222,1.882,224,0.97,225,0.846,232,1.112,236,1.352,237,1.447,238,1.557,240,2.088,242,1.48,243,1.48,245,3.172,246,3.044,247,1.278,256,0.957,263,0.79,268,3.044,278,3.463,288,2.798,315,1.191,379,2.088,406,2.231,438,2.088,442,1.112,443,1.112,461,1.896,472,2.088,586,2.65,630,2.65,633,3.587,639,1.6,661,3.246,662,2.65,663,3.695,664,4.602,665,6.391,666,6.091,667,4.84,668,4.84,669,3.138,670,4.375,671,2.65,672,4.375,673,3.138,674,3.138,675,3.138,676,3.138,677,3.138,678,3.138,679,3.138,680,4.375,681,3.695,682,3.138,683,3.138,684,3.138,685,3.138,686,4.375,687,3.138,688,3.138,689,3.138]],["title/interfaces/GoogleAuthResponse.html",[0,0.337,690,2.498]],["body/interfaces/GoogleAuthResponse.html",[0,0.514,2,0.277,3,0.324,4,0.324,5,0.277,7,0.186,8,0.27,13,0.872,14,0.186,15,0.026,125,0.324,127,0.023,128,0.023,690,4.451,691,4.332,692,6.555]],["title/interfaces/IconButtonProps.html",[0,0.337,693,2.498]],["body/interfaces/IconButtonProps.html",[0,0.416,2,0.224,3,0.263,4,0.263,5,0.224,7,0.151,8,0.238,13,0.882,14,0.229,15,0.027,16,1.917,17,0.444,22,0.865,28,0.728,38,0.673,71,0.673,125,0.263,126,0.845,127,0.02,128,0.02,135,1.046,144,0.975,145,1.046,157,0.975,236,1.945,237,1.374,256,1.154,263,1.046,288,2.816,290,4.669,296,2.117,338,1.945,404,3.187,500,2.298,501,2.298,502,2.117,671,5.148,693,3.913,694,3.507,695,6.293,696,6.293,697,3.507]],["title/interfaces/IncomingCallScreenProps.html",[0,0.337,698,2.498]],["body/interfaces/IncomingCallScreenProps.html",[0,0.373,2,0.201,3,0.235,4,0.235,5,0.201,7,0.135,8,0.221,14,0.2,15,0.027,17,0.454,22,0.821,28,0.652,38,0.891,71,0.603,125,0.235,126,0.758,127,0.019,128,0.019,133,1.15,134,0.603,135,0.937,136,1.756,144,0.874,145,0.937,146,1.898,147,2.06,157,0.874,159,1.551,161,1.15,182,2.249,193,1.413,205,2.762,207,0.937,208,1.004,209,1.413,210,1.413,211,1.325,212,1.483,213,1.625,214,1.413,215,2.804,219,2.317,221,1.15,222,1.518,223,3.645,224,1.15,225,1.004,226,2.762,231,2.762,232,1.74,234,1.413,235,1.756,236,1.518,237,1.625,240,2.477,256,1.28,263,1.237,302,1.756,331,1.625,364,1.516,375,1.63,442,1.319,443,1.319,444,1.756,639,2.505,652,2.762,698,3.645,699,3.143,700,6.08,701,6.08,702,3.722,703,3.645,704,3.722,705,2.969,706,3.722,707,3.722,708,3.722,709,3.722]],["title/interfaces/IncomingCallScreenWrapperProps.html",[0,0.337,710,2.498]],["body/interfaces/IncomingCallScreenWrapperProps.html",[0,0.411,2,0.221,3,0.259,4,0.259,5,0.221,7,0.149,8,0.236,14,0.149,15,0.027,17,0.466,22,0.906,38,1.038,56,2.131,60,2.29,71,0.664,125,0.259,126,0.835,127,0.02,128,0.02,131,3.469,132,3.094,138,2.467,139,1.795,141,2.728,142,2.728,154,2.478,155,1.795,157,0.963,158,1.67,159,1.425,160,2.269,162,1.184,175,1.557,184,3.042,197,3.881,331,1.356,333,1.452,365,1.67,431,2.728,432,2.728,703,3.881,710,3.881,711,3.462,712,3.462,713,3.462,714,4.417,715,4.1,716,4.1,717,4.1]],["title/interfaces/Invitation.html",[0,0.337,347,1.193]],["body/interfaces/Invitation.html",[0,0.64,2,0.191,3,0.223,4,0.223,5,0.191,7,0.172,8,0.214,13,0.966,14,0.228,15,0.027,16,1.895,17,0.257,93,2.079,125,0.409,127,0.018,128,0.018,134,0.572,159,0.83,161,1.092,162,1.02,174,1.341,175,1.341,198,1.341,221,1.092,291,1.251,330,1.439,331,1.57,332,1.898,333,1.681,334,1.681,335,2.527,336,1.547,337,1.251,338,1.466,339,1.547,340,1.666,341,1.439,342,1.681,343,1.169,344,2.702,345,1.251,346,1.547,347,1.681,348,2.508,349,2.702,350,2.702,351,2.702,352,2.434,353,1.439,354,1.251,355,1.251,356,1.666,357,1.666,358,1.666,359,1.169,360,1.666,361,1.666,362,1.666,363,1.933,364,1.439,365,1.439,366,1.341,367,1.666,368,1.666]],["title/interfaces/InviteFormProps.html",[0,0.337,718,2.498]],["body/interfaces/InviteFormProps.html",[0,0.36,2,0.194,3,0.227,4,0.227,5,0.194,7,0.131,8,0.216,13,0.865,14,0.21,15,0.027,17,0.437,22,0.807,28,0.629,38,0.777,43,1.572,71,0.582,123,3.595,125,0.227,126,0.731,127,0.018,128,0.018,133,1.11,134,0.582,135,0.904,144,0.843,145,0.904,157,0.843,207,0.904,208,0.969,210,1.363,211,0.969,212,1.294,213,1.188,214,1.363,215,2.94,219,2.263,222,1.11,224,1.11,225,0.969,230,1.694,232,1.272,234,1.363,235,1.694,236,1.483,237,1.587,238,1.857,242,1.694,243,1.694,245,2.655,246,2.17,249,2.39,256,1.262,263,1.208,283,1.987,302,1.694,311,1.694,315,1.363,318,1.987,341,2.447,352,2.612,406,1.831,442,1.272,443,1.272,444,1.694,450,1.831,462,2.655,466,2.39,469,2.17,474,2.17,516,2.665,626,3.033,633,2.17,652,2.665,705,2.899,718,3.559,719,3.033,720,6.008,721,5.073,722,3.591,723,3.591,724,3.033,725,4.051,726,3.591,727,3.591,728,3.591,729,3.033,730,3.033,731,3.033,732,3.033,733,3.033,734,3.033,735,3.591,736,3.033]],["title/interfaces/Message.html",[0,0.337,359,1.114]],["body/interfaces/Message.html",[0,0.638,2,0.189,3,0.221,4,0.221,5,0.189,7,0.171,8,0.212,13,0.965,14,0.228,15,0.027,16,1.886,17,0.254,93,2.073,125,0.408,127,0.018,128,0.018,134,0.924,159,0.821,161,1.08,162,1.009,174,1.327,175,1.327,198,1.327,221,1.08,288,2.685,291,1.238,330,1.423,331,1.558,332,1.887,333,1.669,334,1.669,335,2.808,336,1.53,337,1.238,338,1.456,339,1.53,340,1.648,341,1.423,342,1.669,343,1.156,344,2.957,345,1.238,346,1.53,347,1.238,348,1.53,349,1.648,350,1.648,351,1.648,352,1.919,353,1.423,354,1.238,355,1.238,356,1.648,357,1.648,358,1.648,359,1.558,360,2.69,361,2.69,362,2.69,363,1.919,364,1.423,365,1.423,366,1.327,367,1.648,368,1.648]],["title/interfaces/PendingInvitationsProps.html",[0,0.337,737,2.498]],["body/interfaces/PendingInvitationsProps.html",[0,0.338,2,0.182,3,0.213,4,0.213,5,0.182,7,0.123,8,0.207,13,0.717,14,0.19,15,0.027,17,0.428,22,0.781,28,0.591,38,0.848,43,2.291,71,0.546,93,1.521,125,0.213,126,0.687,127,0.018,128,0.018,133,1.042,134,0.745,135,0.849,144,0.792,145,0.849,157,0.792,193,1.28,207,0.849,208,0.91,209,1.28,210,1.28,211,1.24,212,1.516,213,1.521,214,1.28,215,2.668,219,1.591,222,1.421,224,1.042,225,0.91,230,1.591,232,1.195,234,1.746,235,2.169,236,1.617,237,1.731,238,1.421,245,1.867,247,1.374,256,1.23,263,1.158,311,1.591,315,1.28,318,1.867,327,2.169,347,2.083,348,1.477,375,1.477,393,2.244,415,2.344,436,2.038,442,1.629,443,1.629,444,1.591,445,2.038,448,2.038,450,1.72,459,2.038,461,2.038,462,2.545,633,2.038,639,1.72,660,2.502,705,2.038,729,2.848,730,2.848,731,2.848,732,2.848,733,2.848,734,2.848,736,2.848,737,3.412,738,2.848,739,5.881,740,5.881,741,6.211,742,3.373,743,3.373,744,3.883,745,3.373,746,3.373,747,3.373,748,3.373,749,3.373,750,4.598,751,4.598,752,3.373,753,3.373,754,3.373,755,3.373,756,3.373]],["title/interfaces/SearchBarProps.html",[0,0.337,757,2.498]],["body/interfaces/SearchBarProps.html",[0,0.429,2,0.231,3,0.271,4,0.271,5,0.231,7,0.156,8,0.242,13,0.902,14,0.214,15,0.027,17,0.462,22,0.877,28,0.75,38,0.693,71,0.693,125,0.271,126,0.872,127,0.021,128,0.021,134,0.693,144,1.005,145,1.078,157,1.005,256,1.176,263,1.078,278,3.838,288,2.354,406,2.741,500,2.369,501,2.369,502,2.183,663,4.54,664,5.363,667,5.363,668,5.363,757,3.989,758,3.615,759,4.54,760,4.281,761,4.281,762,4.281]],["title/interfaces/SegmentedControlProps.html",[0,0.337,763,2.498]],["body/interfaces/SegmentedControlProps.html",[0,0.409,2,0.221,3,0.258,4,0.258,5,0.221,7,0.148,8,0.235,13,0.788,14,0.19,15,0.027,17,0.418,19,1.55,22,0.858,28,0.715,38,0.845,71,0.661,125,0.258,126,0.831,127,0.02,128,0.02,133,1.262,134,0.661,135,1.028,144,0.959,145,1.028,157,0.959,193,1.55,207,1.028,208,1.101,210,1.55,211,1.101,212,1.101,219,1.926,225,1.101,234,1.55,236,1.262,237,1.351,238,1.777,256,1.142,263,1.028,296,2.081,301,2.259,315,1.981,327,1.926,442,1.446,443,1.446,446,2.467,681,3.448,705,2.467,763,3.871,764,3.448,765,6.26,766,6.26,767,4.405,768,5.217,769,4.405,770,4.083,771,4.083,772,4.083,773,4.083,774,4.083,775,4.083,776,4.083,777,4.083,778,4.083,779,4.083]],["title/interfaces/UserData.html",[0,0.337,337,1.193]],["body/interfaces/UserData.html",[0,0.642,2,0.193,3,0.226,4,0.226,5,0.193,7,0.174,8,0.216,13,0.966,14,0.224,15,0.027,16,1.905,17,0.26,93,2.086,125,0.41,127,0.018,128,0.018,134,0.58,159,0.84,161,1.106,162,1.033,174,1.358,175,1.358,198,1.358,221,1.106,291,1.268,330,1.458,331,1.583,332,1.91,333,1.695,334,1.695,335,2.544,336,1.567,337,1.695,338,1.855,339,2.521,340,2.716,341,2.345,342,1.695,343,1.184,344,2.716,345,1.268,346,1.567,347,1.268,348,1.567,349,1.688,350,1.688,351,1.688,352,1.949,353,1.458,354,1.268,355,1.268,356,1.688,357,1.688,358,1.688,359,1.184,360,1.688,361,1.688,362,1.688,363,1.949,364,1.458,365,1.458,366,1.358,367,1.688,368,1.688]],["title/interfaces/UserDataContextProps.html",[0,0.337,780,2.498]],["body/interfaces/UserDataContextProps.html",[0,0.265,2,0.143,3,0.167,4,0.167,5,0.143,7,0.096,8,0.174,13,0.888,14,0.216,15,0.027,17,0.408,19,2.128,20,2.141,22,0.578,28,0.463,33,1.758,38,1.062,56,2.185,60,2.454,71,0.627,85,4.529,98,2.789,103,2.789,104,3.285,125,0.245,127,0.015,128,0.015,151,1.758,174,2.036,256,1.299,257,2.871,258,1.96,259,2.231,260,1.96,261,1.597,262,3.866,267,3.046,268,1.597,278,1.597,280,3.046,282,2.871,283,2.141,285,1.96,336,1.157,337,1.985,338,0.817,339,1.157,341,2.358,343,1.854,347,0.936,373,1.347,374,2.575,375,1.157,379,1.758,426,3.729,721,3.267,724,2.231,780,3.396,781,1.96,782,5.604,783,5.789,784,5.604,785,5.604,786,5.604,787,2.642,788,2.642,789,2.642,790,2.231,791,2.642,792,3.267,793,2.231,794,3.869,795,3.869,796,3.869,797,3.869,798,2.642,799,3.869,800,2.642,801,2.642,802,2.642,803,2.642,804,2.642,805,2.642,806,2.642,807,2.642,808,4.578,809,2.642,810,2.642,811,2.642,812,2.642,813,3.869,814,2.642,815,2.642,816,2.642,817,2.642,818,2.642,819,2.642,820,2.642,821,2.642,822,2.642,823,2.642,824,2.642,825,2.642,826,2.642,827,2.642,828,2.642,829,2.642,830,2.642,831,2.642,832,2.642,833,2.642,834,2.642,835,2.642,836,2.231,837,2.642,838,2.642,839,2.642,840,2.642,841,3.869,842,2.642,843,2.642,844,2.642,845,2.642]],["title/interfaces/UserInfoProps.html",[0,0.337,846,2.498]],["body/interfaces/UserInfoProps.html",[0,0.435,2,0.235,3,0.275,4,0.275,5,0.235,7,0.158,8,0.245,14,0.197,15,0.027,17,0.431,22,0.884,28,0.762,38,0.879,71,0.704,125,0.275,126,0.885,127,0.021,128,0.021,133,1.344,134,0.704,135,1.095,136,2.051,157,1.021,207,1.095,208,1.173,209,1.651,211,1.173,212,1.173,217,2.628,219,2.051,222,1.344,224,1.344,225,1.173,238,1.344,256,1.188,263,1.095,302,2.051,337,2.196,375,1.904,639,2.768,836,3.672,846,4.028,847,3.672,848,6.38,849,5.573,850,4.348,851,4.348]],["title/interfaces/VideoCallControlsProps.html",[0,0.337,852,2.498]],["body/interfaces/VideoCallControlsProps.html",[0,0.389,2,0.21,3,0.246,4,0.246,5,0.21,7,0.141,8,0.228,14,0.204,15,0.027,17,0.433,22,0.838,28,0.681,38,0.819,71,0.63,111,3.108,125,0.246,126,0.791,127,0.019,128,0.019,133,1.201,135,0.978,144,0.913,145,0.978,157,0.913,207,0.978,208,1.048,209,1.475,211,1.048,212,1.363,213,1.286,214,1.475,215,1.981,222,1.562,224,1.201,225,1.048,238,1.201,247,1.583,256,1.301,263,1.272,288,2.767,296,1.981,315,2.132,318,2.797,325,2.883,442,1.377,443,1.79,448,2.348,450,1.981,500,2.151,501,2.151,502,1.981,638,2.883,639,1.981,653,3.282,654,3.282,655,3.282,852,3.75,853,3.282,854,5.206,855,6.319,856,6.319,857,3.75,858,3.886,859,3.886]],["title/interfaces/VideoCallScreenProps.html",[0,0.337,860,2.498]],["body/interfaces/VideoCallScreenProps.html",[0,0.23,2,0.124,3,0.145,4,0.145,5,0.124,7,0.083,8,0.157,14,0.083,15,0.027,17,0.456,19,0.871,20,2.797,22,0.754,28,0.61,29,1.703,38,1.024,43,2.058,44,2.318,48,3.124,50,3.124,51,2.941,56,0.935,60,1.005,71,0.682,86,1.938,106,3.487,109,1.703,113,1.703,115,1.938,118,2.941,125,0.145,126,0.467,127,0.013,128,0.013,131,2.797,132,2.396,133,0.709,134,0.372,135,0.578,136,1.083,137,1.938,138,1.643,139,1.005,141,1.527,142,1.527,143,1.938,144,0.539,145,0.578,146,1.17,147,1.27,148,1.527,149,1.938,150,1.703,151,1.527,152,1.703,153,1.938,154,1.387,155,1.005,157,0.539,158,0.935,159,0.818,160,1.27,161,0.709,162,1.006,163,2.585,164,1.938,165,2.585,166,1.938,167,4.492,168,1.938,169,1.938,170,2.941,171,1.938,172,1.938,173,1.703,177,1.938,180,1.938,182,1.387,183,1.938,184,2.585,185,1.938,187,1.938,188,2.941,189,1.938,190,1.938,191,1.938,192,1.938,193,2.02,194,1.703,195,1.938,196,1.938,197,3.124,198,1.598,199,1.938,200,1.938,201,1.938,202,1.938,203,1.938,204,1.938,205,2.585,206,1.938,207,0.578,208,0.619,209,0.871,210,1.598,211,1.135,212,1.491,213,1.555,214,0.871,215,2.576,216,1.938,217,1.387,219,1.083,220,1.387,221,0.709,222,1.453,223,3.124,224,1.301,225,1.135,226,3.124,227,1.527,228,1.703,229,1.17,230,1.083,231,1.703,232,1.491,233,1.938,234,0.871,235,1.083,236,1.301,237,1.152,238,1.562,239,1.703,241,1.938,242,2.607,243,2.384,244,1.703,245,2.601,246,2.84,247,1.419,248,2.318,249,3.362,256,0.762,311,1.083,313,1.703,315,1.322,316,1.703,318,1.27,327,1.986,328,1.938,334,0.813,442,0.813,443,0.813,452,1.527,469,1.387,474,1.387,500,1.27,501,1.27,502,1.17,516,3.487,525,1.938,633,2.105,639,1.17,640,1.938,705,2.105,854,3.555,857,1.703,860,2.585,861,1.938,862,2.295,863,2.295,864,2.941,865,2.295,866,2.295,867,2.295,868,2.295,869,2.295,870,2.295,871,2.295,872,2.295,873,2.295,874,2.295,875,2.295,876,2.295,877,2.295,878,3.483,879,2.295,880,2.295,881,2.295,882,2.295,883,2.295,884,2.295,885,2.295,886,2.295,887,2.295,888,2.295,889,2.295]],["title/coverage.html",[890,3.878]],["body/coverage.html",[0,0.64,1,1.036,5,0.075,6,2.551,9,1.179,10,1.179,11,1.036,12,1.179,14,0.195,15,0.027,39,1.179,43,3.086,44,0.929,127,0.009,128,0.009,129,1.036,130,2.551,140,1.179,141,0.929,144,0.328,146,0.712,148,0.929,150,1.036,152,1.036,154,0.844,155,1.323,156,1.179,158,0.569,159,0.328,207,1.539,250,1.036,251,2.623,256,1.218,261,0.844,264,1.179,266,1.036,279,1.036,283,0.773,286,1.036,287,3.325,299,1.179,300,1.179,302,0.659,330,2.01,332,0.495,337,0.495,345,0.495,347,0.495,353,0.569,359,0.462,363,0.569,366,0.53,369,1.036,370,2.623,373,0.712,374,0.929,376,1.179,377,0.712,378,1.179,380,1.036,388,1.036,391,1.295,392,2.869,397,0.773,399,0.929,401,0.929,402,0.929,404,0.844,406,0.712,409,0.929,414,0.844,416,0.929,421,0.844,422,0.844,475,0.929,476,3.76,503,1.179,504,1.179,506,1.179,507,1.179,508,1.179,509,1.179,510,1.179,511,1.179,512,1.179,517,1.036,520,1.179,541,1.036,542,1.036,548,1.036,646,1.036,647,2.551,658,1.036,659,2.551,660,1.036,661,1.036,662,2.551,690,1.036,691,1.179,693,1.036,694,1.976,698,1.036,699,2.551,703,1.036,710,1.036,711,1.976,714,1.179,718,1.036,719,2.551,725,1.179,737,1.036,738,2.551,744,1.179,757,1.036,758,1.976,759,1.179,763,1.036,764,2.551,767,1.179,769,1.179,780,1.036,781,2.623,790,1.179,792,1.179,793,1.179,846,1.036,847,2.551,849,1.179,852,1.036,853,2.551,857,1.036,860,1.036,861,2.551,864,1.179,890,1.179,891,1.396,892,1.396,893,1.396,894,4.394,895,7.01,896,1.179,897,6.964,898,1.396,899,1.396,900,1.396,901,1.396,902,1.396,903,1.396,904,1.396,905,1.396,906,1.396,907,5.237,908,1.179,909,1.976,910,1.179,911,3.937,912,1.179,913,3.937,914,2.34,915,3.021,916,4.525,917,3.535,918,2.34,919,2.34,920,3.937,921,1.396,922,1.396,923,1.396,924,3.535,925,1.396,926,3.937,927,1.396,928,1.396,929,1.396,930,3.937,931,1.396,932,1.396,933,1.396,934,1.396,935,2.34,936,3.597,937,1.179,938,1.179,939,1.396,940,2.34,941,1.396,942,1.396,943,2.34,944,1.396,945,2.34,946,1.396,947,3.535,948,1.396,949,4.26,950,3.535,951,1.396,952,1.396,953,1.396,954,2.985,955,1.396,956,1.179,957,2.34,958,1.396,959,2.34,960,1.396,961,1.976,962,1.179,963,2.34,964,1.396,965,1.396,966,1.396]],["title/dependencies.html",[967,2.375,968,3.418]],["body/dependencies.html",[15,0.027,22,1.031,28,1.191,29,2.849,56,1.564,127,0.019,128,0.019,139,1.681,260,2.849,261,2.321,280,2.555,352,1.564,379,2.555,415,2.557,481,4.234,482,4.234,483,4.234,484,3.243,486,3.243,499,3.243,502,1.958,514,3.243,713,3.243,938,4.234,968,3.243,969,3.84,970,3.84,971,3.84,972,3.84,973,3.84,974,3.84,975,3.84,976,3.84,977,3.84,978,3.84,979,3.84,980,3.84,981,3.84,982,6.507,983,3.84,984,3.84,985,3.84,986,3.84,987,3.84,988,3.84,989,3.84,990,3.84,991,3.84,992,3.84,993,2.849,994,3.84,995,3.84,996,3.84,997,3.84,998,3.84,999,3.84,1000,3.84,1001,3.84,1002,5.015,1003,3.84,1004,3.84,1005,3.84,1006,3.84,1007,3.84,1008,3.84,1009,3.84,1010,3.84,1011,3.84,1012,3.84,1013,3.84,1014,3.84,1015,3.84,1016,3.84,1017,3.84,1018,3.84,1019,3.84,1020,3.84,1021,3.84,1022,3.84]],["title/miscellaneous/functions.html",[1023,1.871,1024,3.418]],["body/miscellaneous/functions.html",[7,0.143,13,0.697,14,0.234,15,0.026,127,0.019,128,0.019,158,2.299,251,2.913,261,2.372,266,3.774,267,4.216,268,3.829,279,4.187,288,2.862,291,1.802,332,1.802,338,2.02,345,1.391,370,2.913,373,2.877,374,3.385,380,3.774,388,4.187,415,2.593,475,3.385,476,2.612,477,4.295,529,3.315,541,3.774,542,3.774,548,3.774,623,3.315,781,2.913,894,4.187,896,4.765,912,4.295,936,3.315,937,4.295,961,3.315,962,4.765,1023,2.612,1024,3.315,1025,5.087,1026,5.087,1027,5.041,1028,3.926,1029,3.926,1030,5.087,1031,3.926,1032,6.537,1033,3.926,1034,3.926,1035,3.926,1036,3.926,1037,5.087,1038,3.926,1039,5.087,1040,3.926,1041,3.926]],["title/index.html",[7,0.122,1042,2.843]],["body/index.html",[2,0.293,15,0.024,127,0.024,128,0.024,697,4.574,1042,4.574]],["title/modules.html",[993,3.407]],["body/modules.html",[15,0.024,127,0.024,128,0.024,993,4.042]],["title/properties.html",[8,0.182,967,2.375]],["body/properties.html",[8,0.241,15,0.025,127,0.024,128,0.024,1043,5.357,1044,5.357,1045,5.357,1046,5.357]],["title/miscellaneous/typealiases.html",[1023,1.871,1047,4.048]],["body/miscellaneous/typealiases.html",[7,0.168,14,0.243,15,0.025,127,0.022,128,0.022,132,2.354,154,3.404,175,1.753,198,1.753,330,1.881,363,2.295,364,1.881,365,1.881,377,2.872,392,2.79,397,3.118,421,3.404,476,3.072,517,4.18,712,4.757,894,4.96,908,4.757,909,5.345,910,4.757,954,3.899,956,4.757,1023,3.072,1027,3.899,1048,4.617,1049,5.634,1050,4.617,1051,4.617,1052,6.602,1053,4.617]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":43,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["0.1",{"_index":732,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["0.1.0",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["0.19.13",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":523,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["0.76.5",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["007ejxtydi1v8quy9dq9drurf83y2x3qummbk+jfd15d8vjc5vrjzqqmkqzpzkagkuzj1ukppoygsvzmhoajlmmgcqbmksawrgzjs1rtm8izgr4m20xaymugvgsdcwpxsumdabbnya3",{"_index":42,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["0bsd",{"_index":1046,"title":{},"body":{"properties.html":{}}}],["1",{"_index":193,"title":{"interfaces/ChatHeaderProps-1.html":{}},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["1.0.0",{"_index":1044,"title":{},"body":{"properties.html":{}}}],["1.5",{"_index":527,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["10",{"_index":238,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["10.2.0",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":639,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["1000",{"_index":194,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["11",{"_index":858,"title":{},"body":{"interfaces/VideoCallControlsProps.html":{}}}],["11.1.0",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["12.0.4",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":223,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["13",{"_index":689,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["14.0.1",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["140",{"_index":880,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["15",{"_index":327,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["15.8.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["150",{"_index":220,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["16",{"_index":472,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/FlatTextInputProps.html":{}}}],["18",{"_index":450,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["18.3.1",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["1]?.title.tolowercase",{"_index":565,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["2",{"_index":311,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["2.0.0",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["2.1.2",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["2.21.2",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":215,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["200",{"_index":474,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["2000",{"_index":185,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["25",{"_index":313,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["250",{"_index":709,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["26",{"_index":233,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["3",{"_index":228,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["3.16.6",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["3.4.11",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["3.5",{"_index":734,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["30",{"_index":248,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["315",{"_index":885,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["32",{"_index":697,"title":{},"body":{"interfaces/IconButtonProps.html":{},"index.html":{}}}],["333",{"_index":457,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["35",{"_index":686,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["36",{"_index":454,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{}}}],["4",{"_index":642,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/FlatButtonProps.html":{}}}],["4.0.0",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["4.1.23",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":240,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{}}}],["444",{"_index":470,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["45",{"_index":452,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["48",{"_index":707,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["5",{"_index":462,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["5.0.0",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":217,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["500",{"_index":328,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["52.0.25",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":226,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["600",{"_index":779,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["65",{"_index":859,"title":{},"body":{"interfaces/VideoCallControlsProps.html":{}}}],["7.0.14",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":464,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["8",{"_index":301,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/SegmentedControlProps.html":{}}}],["80",{"_index":638,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["900",{"_index":632,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["90deg",{"_index":887,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["_connection",{"_index":77,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["_elapsed",{"_index":78,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["_reason",{"_index":90,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["absolute",{"_index":243,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["accept",{"_index":294,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["acceptbutton",{"_index":319,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["accepted",{"_index":365,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"miscellaneous/typealiases.html":{}}}],["acceptinvitation",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["accesstoken",{"_index":692,"title":{},"body":{"interfaces/GoogleAuthResponse.html":{}}}],["activecall",{"_index":371,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["activecontrolbutton",{"_index":654,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["activescrollindex",{"_index":556,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["activescrollindex.value",{"_index":603,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["add",{"_index":726,"title":{},"body":{"interfaces/InviteFormProps.html":{}}}],["added.{\"\\n\"}tap",{"_index":624,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["adjust",{"_index":583,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["agora",{"_index":29,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/VideoCallScreenProps.html":{},"dependencies.html":{}}}],["agoraconfig",{"_index":1,"title":{"interfaces/AgoraConfig.html":{}},"body":{"interfaces/AgoraConfig.html":{},"coverage.html":{}}}],["alert",{"_index":137,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["alert.alert",{"_index":178,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{}}}],["alert.alert(\"information",{"_index":867,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["alias",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1048,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alignitems",{"_index":211,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["alignself",{"_index":466,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/InviteFormProps.html":{}}}],["alphabet",{"_index":503,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["alphabet.charat(0",{"_index":562,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["alphabet.charat(alphabet.length",{"_index":566,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["alphabet.indexof",{"_index":560,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["alphabet.length",{"_index":574,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["alphabet_indicator_size",{"_index":510,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["alphabetlayout",{"_index":569,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["alphabetlayout.height",{"_index":572,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["alphabetlayout.y",{"_index":595,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["alphabetletter",{"_index":520,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["alphabetletterprops",{"_index":517,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["alphabetref",{"_index":557,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["android",{"_index":58,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["animated",{"_index":487,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["app",{"_index":155,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["app.tsx",{"_index":894,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["appid",{"_index":9,"title":{},"body":{"interfaces/AgoraConfig.html":{},"coverage.html":{}}}],["appnavigator",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["area",{"_index":514,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"dependencies.html":{}}}],["array(alphabet.length).keys()].map((i",{"_index":628,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["async",{"_index":56,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/VideoCallScreenProps.html":{},"dependencies.html":{}}}],["asyncstorage",{"_index":259,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["asyncstorage.getitem(auth_token_key",{"_index":272,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["asyncstorage.getitem(user_data_key",{"_index":800,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["asyncstorage.removeitem(auth_token_key",{"_index":277,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["asyncstorage.removeitem(user_data_key",{"_index":823,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["asyncstorage.setitem(auth_token_key",{"_index":275,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["asyncstorage.setitem(user_data_key",{"_index":815,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["audio",{"_index":333,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["audiocall",{"_index":431,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{}}}],["audiocallscreen",{"_index":156,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"coverage.html":{}}}],["audiocallscreenprops",{"_index":129,"title":{"interfaces/AudioCallScreenProps.html":{}},"body":{"interfaces/AudioCallScreenProps.html":{},"coverage.html":{}}}],["auth",{"_index":938,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["auth_token_key",{"_index":271,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["authcontext",{"_index":264,"title":{},"body":{"interfaces/AuthContextProps.html":{},"coverage.html":{}}}],["authcontextprops",{"_index":250,"title":{"interfaces/AuthContextProps.html":{}},"body":{"interfaces/AuthContextProps.html":{},"coverage.html":{}}}],["authenticate",{"_index":252,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["authenticate(token",{"_index":273,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["authenticatedstack",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["authenticatedstacknavigator",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["authenticatedstackparamlist",{"_index":908,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["authenticatedstackprop",{"_index":377,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["authprovider",{"_index":266,"title":{},"body":{"interfaces/AuthContextProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authprovider(__namedparameters",{"_index":1031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authstack",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["authstacknavigator",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["authtoken",{"_index":269,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["auto",{"_index":303,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["autosubscribeaudio",{"_index":101,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["avatar",{"_index":221,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["avatar_size",{"_index":507,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["averagetouches(true",{"_index":591,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["await",{"_index":60,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["babel",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["backgroundcolor",{"_index":315,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["bar",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":445,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["bold",{"_index":235,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["boolean",{"_index":111,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["borderbottomcolor",{"_index":636,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["borderbottomwidth",{"_index":637,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["bordercolor",{"_index":229,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["borderradius",{"_index":225,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["bordertopwidth",{"_index":456,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["borderwidth",{"_index":227,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["bottom",{"_index":244,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["bottomtabparamlist",{"_index":909,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["bottomtabscreenprops",{"_index":1053,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["button",{"_index":302,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/UserInfoProps.html":{},"coverage.html":{}}}],["buttoncolorstyle",{"_index":304,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["buttondisabled",{"_index":323,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["buttonprops",{"_index":286,"title":{"interfaces/ButtonProps.html":{}},"body":{"interfaces/ButtonProps.html":{},"coverage.html":{}}}],["buttons",{"_index":756,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["buttonscontainer",{"_index":708,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["buttontext",{"_index":326,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/FlatButtonProps.html":{}}}],["buttontextdisabled",{"_index":329,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["call",{"_index":182,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["calldata",{"_index":159,"title":{"interfaces/CallData.html":{}},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["callduration",{"_index":170,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["calleeid",{"_index":368,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["calleevideoview",{"_index":881,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["callerid",{"_index":367,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["callinfocontainer",{"_index":704,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["callpartner",{"_index":161,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["callpartner.name",{"_index":205,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["callpartnercontainer",{"_index":218,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{}}}],["callpartnername",{"_index":231,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["callpartnervideoview",{"_index":883,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["callsession",{"_index":366,"title":{"interfaces/CallSession.html":{}},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["callsessioncontext",{"_index":378,"title":{},"body":{"interfaces/CallSessionProps.html":{},"coverage.html":{}}}],["callsessionid",{"_index":162,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["callsessionprops",{"_index":369,"title":{"interfaces/CallSessionProps.html":{}},"body":{"interfaces/CallSessionProps.html":{},"coverage.html":{}}}],["callsessionprovider",{"_index":380,"title":{},"body":{"interfaces/CallSessionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["callsessionprovider(__namedparameters",{"_index":1033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callstatus",{"_index":363,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["calltype",{"_index":331,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["camera",{"_index":872,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["cameraon",{"_index":854,"title":{},"body":{"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["camerastatus",{"_index":884,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["catch",{"_index":103,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["center",{"_index":212,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["channel",{"_index":81,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["channelname",{"_index":10,"title":{},"body":{"interfaces/AgoraConfig.html":{},"coverage.html":{}}}],["channelprofile",{"_index":73,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["channelprofiletype",{"_index":26,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["channelprofiletype.channelprofilecommunication",{"_index":74,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["chatdetails",{"_index":422,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["chatdetailsrouteprop",{"_index":421,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["chatheader",{"_index":409,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{}}}],["chatheaderprops",{"_index":391,"title":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{}},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{}}}],["chatid",{"_index":423,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{}}}],["chatilistitem",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["chatitem",{"_index":353,"title":{"interfaces/ChatItem.html":{}},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["chatmessageitem",{"_index":416,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{}}}],["chatmessageitemprops",{"_index":414,"title":{"interfaces/ChatMessageItemProps.html":{}},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{}}}],["chatslist",{"_index":411,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["chatsscreen",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["chatsstack",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["chatsstacknavigator",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["chatsstackparamlist",{"_index":397,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["checkinvitationstatus",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["children",{"_index":267,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{},"miscellaneous/functions.html":{}}}],["clamp",{"_index":488,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["clampedindex",{"_index":598,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["clear",{"_index":824,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["clearinterval(timerid",{"_index":195,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["clearuserdata",{"_index":782,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["client",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["clientroletype",{"_index":27,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["clientroletype.clientrolebroadcaster",{"_index":100,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["code",{"_index":724,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["color",{"_index":236,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["colors",{"_index":144,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["colors.accepttransparent",{"_index":320,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["colors.background",{"_index":440,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["colors.danger",{"_index":657,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{}}}],["colors.dangertransparent",{"_index":322,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["colors.disabledbackground",{"_index":325,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["colors.primary",{"_index":230,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["colors.primarytransparent",{"_index":316,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["colors.secondary",{"_index":777,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["colors.secondarytransparent",{"_index":318,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["colors.ternary",{"_index":681,"title":{},"body":{"interfaces/FlatTextInputProps.html":{},"interfaces/SegmentedControlProps.html":{}}}],["colors.textaccent",{"_index":324,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["colors.textdimmed",{"_index":239,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["colors.textlight",{"_index":237,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["commonstyles",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["components/defaultcallcontrols",{"_index":149,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["components/inactivecalloverlay",{"_index":153,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["components/ui/button",{"_index":702,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["components/ui/diamondbackground",{"_index":147,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["components/ui/flattextinput",{"_index":407,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["components/ui/iconbutton",{"_index":405,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["components/videocallcontrols",{"_index":862,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["condition",{"_index":876,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["config",{"_index":39,"title":{},"body":{"interfaces/AgoraConfig.html":{},"coverage.html":{}}}],["configuration",{"_index":32,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["connect",{"_index":34,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["console.error",{"_index":186,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{}}}],["console.error(\"failed",{"_index":808,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["console.error(\"initiatecall",{"_index":433,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["console.log(\"join",{"_index":80,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["console.log(\"remote",{"_index":84,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["console.log(\"user",{"_index":839,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["console.warn(\"join",{"_index":105,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["const",{"_index":38,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["contact",{"_index":332,"title":{"interfaces/Contact.html":{}},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contact.name[0].touppercase",{"_index":533,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactavatar",{"_index":355,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["contactid",{"_index":342,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["contactinnercontainer",{"_index":635,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactitem",{"_index":634,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactitems",{"_index":549,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactitems.length",{"_index":620,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactitems[0]?.title.tolowercase",{"_index":561,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactitems[contactitems.length",{"_index":564,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactname",{"_index":354,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["contacts",{"_index":623,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"miscellaneous/functions.html":{}}}],["contacts.foreach((contact",{"_index":531,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactsdata",{"_index":477,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"miscellaneous/functions.html":{}}}],["contactsection",{"_index":548,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contactsection(__namedparameters",{"_index":1034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contactsectionprops",{"_index":475,"title":{"interfaces/ContactSectionProps.html":{}},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contactsections",{"_index":536,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["contactsectionstype",{"_index":345,"title":{"interfaces/ContactSectionsType.html":{}},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contactslistheader",{"_index":541,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contactslistheader(__namedparameters",{"_index":1035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contactslistitem",{"_index":542,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["contactslistitem(__namedparameters",{"_index":1036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contactsscreen",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["contactsscreenprops",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["container",{"_index":209,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["containerstyle",{"_index":682,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["contentcontainerstyle={styles.flatlistcontainer",{"_index":752,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["contentcontainerstyle={styles.messagescontainer",{"_index":437,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["context",{"_index":280,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{},"dependencies.html":{}}}],["controlbutton",{"_index":653,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["controls",{"_index":513,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["core",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":890,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createagorartcengine",{"_index":23,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["createcontext",{"_index":257,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["createcontext(undefined",{"_index":265,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["createdat",{"_index":344,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["dark",{"_index":678,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["data",{"_index":174,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{}}}],["data.invitationcode",{"_index":813,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["data.status",{"_index":181,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{}}}],["db",{"_index":790,"title":{},"body":{"interfaces/UserDataContextProps.html":{},"coverage.html":{}}}],["debugging",{"_index":643,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["default",{"_index":126,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["default_hight",{"_index":300,"title":{},"body":{"interfaces/ButtonProps.html":{},"coverage.html":{}}}],["default_width",{"_index":299,"title":{},"body":{"interfaces/ButtonProps.html":{},"coverage.html":{}}}],["defaultcallcontrols",{"_index":148,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["defaultcallcontrolsprops",{"_index":646,"title":{"interfaces/DefaultCallControlsProps.html":{}},"body":{"interfaces/DefaultCallControlsProps.html":{},"coverage.html":{}}}],["defaultcontrolscontainer",{"_index":241,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["dependencies",{"_index":968,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["destroy",{"_index":120,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["dev",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["diamondbackground",{"_index":146,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["dimensionvalue",{"_index":672,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["disabled",{"_index":289,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["disabledbutton",{"_index":655,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["doc",{"_index":787,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["doc(db",{"_index":827,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["documentation",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":811,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["dom",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["dotenv",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["dynamicpaddinghorizontal",{"_index":309,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["dynamicpaddingvertical",{"_index":312,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["email",{"_index":339,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{}}}],["end",{"_index":467,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/DefaultCallControlsProps.html":{}}}],["endcallbutton",{"_index":656,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{}}}],["ended",{"_index":198,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/VideoCallScreenProps.html":{},"miscellaneous/typealiases.html":{}}}],["ended\"].includes(data.status",{"_index":176,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{}}}],["engineref",{"_index":45,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current",{"_index":70,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current.enableaudio",{"_index":95,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current.enablevideo",{"_index":96,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current.initialize",{"_index":72,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current.leavechannel",{"_index":107,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current.registereventhandler(eventhandlerref.current",{"_index":94,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current.unregistereventhandler(eventhandlerref.current",{"_index":121,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current?.joinchannel(token",{"_index":99,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current?.mutelocalaudiostream(mute",{"_index":112,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current?.mutelocalvideostream(!enable",{"_index":117,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current?.release",{"_index":122,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current?.setenablespeakerphone(on",{"_index":114,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["engineref.current?.switchcamera",{"_index":119,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["enter",{"_index":674,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["error",{"_index":104,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["error(\"error",{"_index":842,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["error(\"useauth",{"_index":284,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["error(\"usecallsession",{"_index":390,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["error(\"useuserdata",{"_index":845,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["evenly",{"_index":652,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{}}}],["event",{"_index":298,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["event.changey",{"_index":594,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["eventhandlerref",{"_index":47,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["eventhandlerref.current",{"_index":75,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["exist",{"_index":812,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["expo",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["expo/metro",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["expo/vector",{"_index":501,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["export",{"_index":125,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["extends",{"_index":663,"title":{},"body":{"interfaces/FlatTextInputProps.html":{},"interfaces/SearchBarProps.html":{}}}],["extrapolation",{"_index":489,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["extrapolation.clamp",{"_index":524,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["f2f502f3c8ee422b9511b9d0c04e6821",{"_index":40,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["false",{"_index":586,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{}}}],["fetchcallerdata",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["fetchchats",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["fetchcontacts",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["fetchinvitations",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["fetchmessagesandlisten",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["fetchstoredtoken",{"_index":253,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["fetchuserdata",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["filterchatsdata",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["firebase",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["firebase/firestore",{"_index":336,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{}}}],["firebaseconfig",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["firestore",{"_index":841,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["first",{"_index":584,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["firstcontactindex",{"_index":559,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["firstletter",{"_index":532,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["fix",{"_index":677,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["flatbutton",{"_index":660,"title":{},"body":{"interfaces/FlatButtonProps.html":{},"interfaces/PendingInvitationsProps.html":{},"coverage.html":{}}}],["flatbuttonprops",{"_index":658,"title":{"interfaces/FlatButtonProps.html":{}},"body":{"interfaces/FlatButtonProps.html":{},"coverage.html":{}}}],["flatlist",{"_index":393,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["flatlistcontainer",{"_index":753,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["flattextinput",{"_index":406,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/SearchBarProps.html":{},"coverage.html":{}}}],["flattextinputprops",{"_index":661,"title":{"interfaces/FlatTextInputProps.html":{}},"body":{"interfaces/FlatTextInputProps.html":{},"coverage.html":{}}}],["flex",{"_index":210,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["flexdirection",{"_index":442,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["fontfamily",{"_index":888,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["fontsize",{"_index":232,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["fontweight",{"_index":234,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["formatcallduration",{"_index":150,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["formatcallduration(callduration",{"_index":206,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["friends",{"_index":626,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/InviteFormProps.html":{}}}],["fromuserid",{"_index":348,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserData.html":{}}}],["fromusername",{"_index":349,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["function",{"_index":256,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["functions",{"_index":1024,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gap",{"_index":448,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["generate",{"_index":810,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["generatecontactsections",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatecontactsections(contacts",{"_index":529,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"miscellaneous/functions.html":{}}}],["generatecontactsections(contactsdata",{"_index":551,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["generateinvitationcode",{"_index":792,"title":{},"body":{"interfaces/UserDataContextProps.html":{},"coverage.html":{}}}],["gesture",{"_index":484,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"dependencies.html":{}}}],["gesture.pan",{"_index":590,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["gesturedetector",{"_index":485,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["gesturedetectoranimatedstyle",{"_index":607,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["gestureresponderevent",{"_index":297,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["getcallsessionid",{"_index":401,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{}}}],["getcallsessionid(userid",{"_index":430,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["getdoc",{"_index":789,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["getdoc(userdoc",{"_index":831,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["getitemheight",{"_index":612,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["getitemlayout",{"_index":611,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["getreactnativepersistence",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getreactnativepersistence(storage",{"_index":1038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getsectionheaderheight",{"_index":613,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["googleauthresponse",{"_index":690,"title":{"interfaces/GoogleAuthResponse.html":{}},"body":{"interfaces/GoogleAuthResponse.html":{},"coverage.html":{}}}],["gradient",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["granted",{"_index":59,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["granted[\"android.permission.camera",{"_index":66,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["granted[\"android.permission.record_audio",{"_index":64,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["groupedcontacts",{"_index":530,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["groupedcontacts[firstletter",{"_index":534,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["groupedcontacts[firstletter].push(contact",{"_index":535,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["groupedcontacts[letter",{"_index":540,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["half",{"_index":616,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["handleaccept",{"_index":715,"title":{},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{}}}],["handleacceptinvitation",{"_index":739,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["handleacceptinvitation(item.id",{"_index":747,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["handlecameratoggle",{"_index":868,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["handleendcall",{"_index":196,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["handleitempress",{"_index":545,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["handlemutetoggle",{"_index":199,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["handler",{"_index":486,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"dependencies.html":{}}}],["handlereject",{"_index":717,"title":{},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{}}}],["handlerejectinvitation",{"_index":740,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["handlerejectinvitation(item.id",{"_index":749,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["handlesendinvitation",{"_index":720,"title":{},"body":{"interfaces/InviteFormProps.html":{}}}],["handlespeakertoggle",{"_index":202,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["handleswapcamera",{"_index":871,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["header",{"_index":441,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{}}}],["headeravatar",{"_index":453,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["headerheight",{"_index":435,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["headername",{"_index":449,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["headernamewrapper",{"_index":447,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["height",{"_index":224,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["hidden",{"_index":775,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["hit_slop",{"_index":512,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["hooks/useagora",{"_index":143,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["hooks/usechatmessages",{"_index":400,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["icon",{"_index":665,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["iconbutton",{"_index":404,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IconButtonProps.html":{},"coverage.html":{}}}],["iconbuttonprops",{"_index":693,"title":{"interfaces/IconButtonProps.html":{}},"body":{"interfaces/IconButtonProps.html":{},"coverage.html":{}}}],["icons",{"_index":502,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"dependencies.html":{}}}],["id",{"_index":93,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserData.html":{}}}],["identifier",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":136,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["imageurl",{"_index":361,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["inactivecalloverlay",{"_index":152,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["incoming",{"_index":364,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"miscellaneous/typealiases.html":{}}}],["incomingcall",{"_index":386,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["incomingcallscreen",{"_index":703,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"coverage.html":{}}}],["incomingcallscreenprops",{"_index":698,"title":{"interfaces/IncomingCallScreenProps.html":{}},"body":{"interfaces/IncomingCallScreenProps.html":{},"coverage.html":{}}}],["incomingcallscreenwrapper",{"_index":714,"title":{},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{},"coverage.html":{}}}],["incomingcallscreenwrapperprops",{"_index":710,"title":{"interfaces/IncomingCallScreenWrapperProps.html":{}},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{},"coverage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indicator",{"_index":627,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["information",{"_index":179,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{}}}],["infotext",{"_index":706,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["init",{"_index":68,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["init().then",{"_index":124,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["initiatecall",{"_index":429,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["input",{"_index":438,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/FlatTextInputProps.html":{}}}],["inputcontainer",{"_index":455,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["inputstyle",{"_index":684,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["interactionstack",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["interactionstacknavigator",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["interactionstackparamlist",{"_index":154,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["interactionstackprop",{"_index":910,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"index.html":{}}}],["interpolate",{"_index":490,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["invitation",{"_index":347,"title":{"interfaces/Invitation.html":{}},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"coverage.html":{}}}],["invitationcode",{"_index":341,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{}}}],["invitationitem",{"_index":754,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["invitations",{"_index":741,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["invitations.length",{"_index":751,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["invitationsscreen",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["invitationtext",{"_index":755,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["invite",{"_index":625,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["inviteform",{"_index":725,"title":{},"body":{"interfaces/InviteFormProps.html":{},"coverage.html":{}}}],["inviteformprops",{"_index":718,"title":{"interfaces/InviteFormProps.html":{}},"body":{"interfaces/InviteFormProps.html":{},"coverage.html":{}}}],["ionicons",{"_index":500,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["irtcengine",{"_index":24,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["irtcengineeventhandler",{"_index":25,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["isauthenticated",{"_index":254,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["iscallactive",{"_index":167,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["iscurrentuser",{"_index":417,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["isdarkmode",{"_index":666,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["isdarkmode={true",{"_index":762,"title":{},"body":{"interfaces/SearchBarProps.html":{}}}],["isinteracting",{"_index":554,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["isinteracting.value",{"_index":568,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["isjoined",{"_index":48,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["item",{"_index":415,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/PendingInvitationsProps.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["item.avatar",{"_index":547,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["item.contactid].sort().join(\"_",{"_index":544,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["item.fromuserid",{"_index":748,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["item.fromusername",{"_index":746,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["item.id",{"_index":436,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["item.imageurl",{"_index":419,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["item.name",{"_index":546,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["item.senderid",{"_index":418,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["item.text",{"_index":420,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["item.userid",{"_index":543,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["item_height",{"_index":508,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["item_spacing",{"_index":506,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["itemindex",{"_index":581,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["joinchannel",{"_index":97,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["joined",{"_index":86,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["json.parse(storeduserdata",{"_index":802,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["json.stringify(data",{"_index":816,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["justifycontent",{"_index":213,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["key",{"_index":346,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["keyboardavoidingview",{"_index":394,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["keyextractor={(item",{"_index":622,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["knob",{"_index":641,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["knob_size",{"_index":511,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["last",{"_index":600,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["lastcontactindex",{"_index":563,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["lastmessagedate",{"_index":357,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["lastmessagetext",{"_index":356,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["layout",{"_index":483,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"dependencies.html":{}}}],["leavechannel",{"_index":106,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["left",{"_index":245,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["letter",{"_index":518,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["letter.touppercase",{"_index":528,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["license",{"_index":1045,"title":{},"body":{"properties.html":{}}}],["linear",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":482,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"dependencies.html":{}}}],["literal",{"_index":1052,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":809,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["loadingscreen",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["loaduserdata",{"_index":783,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["loginscreen",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logout",{"_index":255,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["map((letter",{"_index":539,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["marginbottom",{"_index":219,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["marginhorizontal",{"_index":773,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["marginleft",{"_index":451,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{}}}],["marginright",{"_index":640,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["margintop",{"_index":705,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["marginvertical",{"_index":461,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["markmessagesasread",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["matching",{"_index":128,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.floor(viewableitems.length",{"_index":617,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["math.max",{"_index":599,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["math.max(1",{"_index":573,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["math.min(snaptoindex",{"_index":601,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["math.round(scrollableindex.value",{"_index":597,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["maxheight",{"_index":728,"title":{},"body":{"interfaces/InviteFormProps.html":{}}}],["maxwidth",{"_index":463,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["measure",{"_index":491,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["measure(alphabetref",{"_index":570,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["message",{"_index":359,"title":{"interfaces/Message.html":{}},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["messagecontainer",{"_index":460,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["messageimage",{"_index":473,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["messages",{"_index":427,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["messagescontainer",{"_index":458,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["messagetext",{"_index":471,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["miscellaneous",{"_index":1023,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mockcontacts",{"_index":504,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["mockinvitations",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["mode",{"_index":679,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["modules",{"_index":993,"title":{"modules.html":{}},"body":{"dependencies.html":{},"modules.html":{}}}],["monospace",{"_index":889,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["mute",{"_index":110,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/DefaultCallControlsProps.html":{}}}],["muted",{"_index":163,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["mymessage",{"_index":465,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["name",{"_index":338,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IconButtonProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"miscellaneous/functions.html":{}}}],["native",{"_index":28,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"dependencies.html":{}}}],["nativewind",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["navigation",{"_index":158,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["navigation.goback",{"_index":184,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["navigation.navigate(\"chats",{"_index":410,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{}}}],["navigation.navigate(\"interactionstack",{"_index":384,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["navigation.replace(calltype",{"_index":716,"title":{},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{}}}],["navigation/bottom",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["navigation/elements",{"_index":396,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["navigation/native",{"_index":139,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{},"dependencies.html":{}}}],["navigation/stack",{"_index":713,"title":{},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{},"dependencies.html":{}}}],["new",{"_index":283,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/UserDataContextProps.html":{},"coverage.html":{}}}],["newinvitecontainer",{"_index":727,"title":{},"body":{"interfaces/InviteFormProps.html":{}}}],["newmessage",{"_index":424,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["nodejs.timeout",{"_index":189,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["null",{"_index":123,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/InviteFormProps.html":{}}}],["number",{"_index":16,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["object.keys(groupedcontacts",{"_index":537,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["offline",{"_index":91,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["offset",{"_index":585,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["onaccept",{"_index":700,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["onbegin",{"_index":592,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["oncameratoggle",{"_index":855,"title":{},"body":{"interfaces/VideoCallControlsProps.html":{}}}],["onchange((event",{"_index":593,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["onchangetext",{"_index":667,"title":{},"body":{"interfaces/FlatTextInputProps.html":{},"interfaces/SearchBarProps.html":{}}}],["onend",{"_index":604,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["onendcall",{"_index":648,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{}}}],["onfinalize",{"_index":606,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["oninitiatecall",{"_index":408,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["oninitiatecall(\"audio",{"_index":412,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["oninitiatecall(\"video",{"_index":413,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["onjoinchannelsuccess",{"_index":76,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["onmutetoggle",{"_index":649,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{}}}],["onpress",{"_index":290,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/IconButtonProps.html":{}}}],["onreject",{"_index":701,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{}}}],["onsignout",{"_index":848,"title":{},"body":{"interfaces/UserInfoProps.html":{}}}],["onspeakertoggle",{"_index":650,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{}}}],["onswapcamera",{"_index":856,"title":{},"body":{"interfaces/VideoCallControlsProps.html":{}}}],["ontabchange",{"_index":765,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["ontabchange(\"all",{"_index":770,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["ontabchange(\"unread",{"_index":771,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["onuserjoined",{"_index":83,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["onuseroffline",{"_index":89,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["onviewableitemschanged",{"_index":614,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["opacity",{"_index":521,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["optional",{"_index":288,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ChatItem.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/Message.html":{},"interfaces/SearchBarProps.html":{},"interfaces/VideoCallControlsProps.html":{},"miscellaneous/functions.html":{}}}],["overflow",{"_index":774,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["overview",{"_index":1042,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":967,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":214,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["paddingbottom",{"_index":459,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["paddinghorizontal",{"_index":247,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["paddingleft",{"_index":630,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{}}}],["paddingright",{"_index":687,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["paddingtop",{"_index":216,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["paddingvertical",{"_index":446,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/SegmentedControlProps.html":{}}}],["pangesture",{"_index":589,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["parameters",{"_index":1032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["params",{"_index":387,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{}}}],["parseddata",{"_index":801,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["party",{"_index":180,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["pending",{"_index":750,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["pendinginvitations",{"_index":744,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{},"coverage.html":{}}}],["pendinginvitationsprops",{"_index":737,"title":{"interfaces/PendingInvitationsProps.html":{}},"body":{"interfaces/PendingInvitationsProps.html":{},"coverage.html":{}}}],["permissionsandroid",{"_index":30,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["permissionsandroid.permissions.camera",{"_index":63,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["permissionsandroid.permissions.record_audio",{"_index":62,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["permissionsandroid.requestmultiple",{"_index":61,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["permissionsandroid.results.granted",{"_index":65,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["permissionsgranted",{"_index":53,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["persistence",{"_index":1040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["picker/picker",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["picture",{"_index":340,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["placeholder",{"_index":668,"title":{},"body":{"interfaces/FlatTextInputProps.html":{},"interfaces/SearchBarProps.html":{}}}],["platform",{"_index":31,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["platform.os",{"_index":57,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["position",{"_index":242,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["preset",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["prev",{"_index":192,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["prevuids",{"_index":88,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["prevuids.filter((id",{"_index":92,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["primary",{"_index":292,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["primarybutton",{"_index":314,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["profilepic",{"_index":836,"title":{},"body":{"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{}}}],["promise",{"_index":262,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"properties.html":{}}}],["purposes",{"_index":37,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["randomavatar",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["react",{"_index":22,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"dependencies.html":{}}}],["react.fc",{"_index":157,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["react.reactnode",{"_index":268,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/UserDataContextProps.html":{},"miscellaneous/functions.html":{}}}],["reactnative",{"_index":742,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["reactnativeasyncstorage",{"_index":1039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readby",{"_index":362,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["reanimated",{"_index":499,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"dependencies.html":{}}}],["recognition",{"_index":515,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["reject",{"_index":295,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["rejectbutton",{"_index":321,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["rejected",{"_index":175,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"miscellaneous/typealiases.html":{}}}],["rejectinvitation",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["relative",{"_index":878,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["remote",{"_index":877,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["remoteuid",{"_index":51,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["remoteuid.at(0",{"_index":873,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["renderinvitation",{"_index":745,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["renderitem",{"_index":621,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["rendermessage",{"_index":434,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["requestpermissions",{"_index":55,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["results",{"_index":127,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":71,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["returns",{"_index":1037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["right",{"_index":246,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["root",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rotate",{"_index":886,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["route",{"_index":131,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["route.params",{"_index":160,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["routeprop",{"_index":132,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{},"miscellaneous/typealiases.html":{}}}],["row",{"_index":443,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["rowcontainer",{"_index":735,"title":{},"body":{"interfaces/InviteFormProps.html":{}}}],["rtcsurfaceview",{"_index":863,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["runonjs",{"_index":492,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["runonjs(scrolltolocation)(clampedindex",{"_index":602,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["runonjs(snapindicatorto)(activescrollindex.value",{"_index":605,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["runonjs(snapindicatorto)(index",{"_index":619,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["runonui",{"_index":493,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["runtime",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["safe",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":822,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["saved",{"_index":840,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["saveusertofirestore",{"_index":825,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["saveusertofirestore(data",{"_index":814,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["saving",{"_index":843,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["scale",{"_index":526,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["screen",{"_index":385,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{}}}],["screens",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["scrollableindex",{"_index":519,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["scrollableindex.value",{"_index":522,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["scrolltolocation",{"_index":579,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["scrollviewref",{"_index":558,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["scrollviewref.current?.scrolltolocation",{"_index":580,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["search",{"_index":760,"title":{},"body":{"interfaces/SearchBarProps.html":{}}}],["searchbar",{"_index":759,"title":{},"body":{"interfaces/SearchBarProps.html":{},"coverage.html":{}}}],["searchbarprops",{"_index":757,"title":{"interfaces/SearchBarProps.html":{}},"body":{"interfaces/SearchBarProps.html":{},"coverage.html":{}}}],["secondary",{"_index":293,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["secondarybutton",{"_index":317,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["section",{"_index":481,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"dependencies.html":{}}}],["section_header_height",{"_index":509,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{}}}],["sectionheader",{"_index":629,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["sectionheadertext",{"_index":631,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["sectionindex",{"_index":582,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["sectionlist",{"_index":479,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["sectionlistgetitemlayout",{"_index":480,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["see",{"_index":645,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["segmentedcontrol",{"_index":769,"title":{},"body":{"interfaces/SegmentedControlProps.html":{},"coverage.html":{}}}],["segmentedcontrolprops",{"_index":763,"title":{"interfaces/SegmentedControlProps.html":{}},"body":{"interfaces/SegmentedControlProps.html":{},"coverage.html":{}}}],["selectedtab",{"_index":766,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["senderid",{"_index":360,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["sendinvitation",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["sendmessage",{"_index":402,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{}}}],["sendmessage(chatid",{"_index":439,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["service",{"_index":35,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["services/callsessionservice",{"_index":142,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["services/chatservice",{"_index":403,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["services/firebaseconfig",{"_index":791,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["session",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["session/providers/google",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["sessionid",{"_index":383,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["setactivecall",{"_index":372,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["setauthtoken",{"_index":270,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["setauthtoken(null",{"_index":276,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["setauthtoken(token",{"_index":274,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["setcallduration",{"_index":171,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setcallduration((prev",{"_index":191,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setcameraon",{"_index":865,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["setcameraon((cameraon",{"_index":870,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["setcontactitems",{"_index":550,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["setcontactitems(generatecontactsections(contactsdata",{"_index":609,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["setcontactitems(mockcontacts",{"_index":610,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["setdoc",{"_index":788,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setdoc(userdoc",{"_index":833,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setinterval",{"_index":190,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setinvitationcode",{"_index":721,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["setinvitationcode(data.invitationcode",{"_index":821,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setinvitationcode(parseddata.invitationcode",{"_index":807,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setiscallactive",{"_index":168,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setiscallactive(false",{"_index":177,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setiscallactive(true",{"_index":187,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setisjoined",{"_index":49,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["setisjoined(false",{"_index":108,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["setisjoined(true",{"_index":79,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["setmuted",{"_index":164,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setmuted((muted",{"_index":201,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setnewmessage",{"_index":425,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["setpermissionsgranted",{"_index":54,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["setpermissionsgranted(true",{"_index":67,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["setremoteuid",{"_index":52,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["setremoteuid((prevuids",{"_index":87,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["setspeakeron",{"_index":166,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setspeakeron((speakeron",{"_index":204,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setspeakerphoneon",{"_index":113,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["setspeakerphoneon(!speakeron",{"_index":203,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["settimeout",{"_index":183,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["settingsscreen",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["setupcalllistener",{"_index":376,"title":{},"body":{"interfaces/CallSessionProps.html":{},"coverage.html":{}}}],["setupcalllistener(userid",{"_index":382,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["setuserdata",{"_index":784,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuseremail",{"_index":796,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuseremail(data.email",{"_index":819,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuseremail(parseddata.email",{"_index":805,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuserid",{"_index":794,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuserid(data.id",{"_index":817,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuserid(parseddata.id",{"_index":803,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setusername",{"_index":795,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setusername(data.name",{"_index":818,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setusername(parseddata.name",{"_index":804,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuserpicture",{"_index":797,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuserpicture(data.picture",{"_index":820,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["setuserpicture(parseddata.picture",{"_index":806,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["shadowcolor",{"_index":729,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["shadowoffset",{"_index":730,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["shadowopacity",{"_index":731,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["shadowradius",{"_index":733,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["sharedvalue",{"_index":494,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["size",{"_index":695,"title":{},"body":{"interfaces/IconButtonProps.html":{}}}],["snapby",{"_index":571,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["snapindicatorto",{"_index":567,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["snapto",{"_index":575,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["snaptoindex",{"_index":596,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["sort",{"_index":538,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["space",{"_index":444,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["speaker",{"_index":651,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{}}}],["speakeron",{"_index":165,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["src/.../authprovider.tsx",{"_index":1025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../callsessionprovider.tsx",{"_index":1026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chatdetails.tsx",{"_index":1051,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../commontypes.ts",{"_index":1050,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../contactsection.tsx",{"_index":1027,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../contactsscreen.tsx",{"_index":1049,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../firebaseconfig.ts",{"_index":1028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../loginscreen.tsx",{"_index":1029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../userdataprovider.tsx",{"_index":1030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components/contactsection.tsx",{"_index":476,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/components/defaultcallcontrols.tsx",{"_index":647,"title":{},"body":{"interfaces/DefaultCallControlsProps.html":{},"coverage.html":{}}}],["src/components/inactivecalloverlay.tsx",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["src/components/inviteform.tsx",{"_index":719,"title":{},"body":{"interfaces/InviteFormProps.html":{},"coverage.html":{}}}],["src/components/pendinginvitations.tsx",{"_index":738,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{},"coverage.html":{}}}],["src/components/ui/button.tsx",{"_index":287,"title":{},"body":{"interfaces/ButtonProps.html":{},"coverage.html":{}}}],["src/components/ui/diamondbackground.tsx",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["src/components/ui/flatbutton.tsx",{"_index":659,"title":{},"body":{"interfaces/FlatButtonProps.html":{},"coverage.html":{}}}],["src/components/ui/flattextinput.tsx",{"_index":662,"title":{},"body":{"interfaces/FlatTextInputProps.html":{},"coverage.html":{}}}],["src/components/ui/iconbutton.tsx",{"_index":694,"title":{},"body":{"interfaces/IconButtonProps.html":{},"coverage.html":{}}}],["src/components/ui/searchbar.tsx",{"_index":758,"title":{},"body":{"interfaces/SearchBarProps.html":{},"coverage.html":{}}}],["src/components/ui/segmentedcontrol.tsx",{"_index":764,"title":{},"body":{"interfaces/SegmentedControlProps.html":{},"coverage.html":{}}}],["src/components/ui/userinfo.tsx",{"_index":847,"title":{},"body":{"interfaces/UserInfoProps.html":{},"coverage.html":{}}}],["src/components/videocallcontrols.tsx",{"_index":853,"title":{},"body":{"interfaces/VideoCallControlsProps.html":{},"coverage.html":{}}}],["src/hooks/useagora.tsx",{"_index":6,"title":{},"body":{"interfaces/AgoraConfig.html":{},"coverage.html":{}}}],["src/hooks/usechatmessages.tsx",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["src/services/authgateway.ts",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["src/services/callsessionservice.ts",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["src/services/chatservice.ts",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["src/services/contactservice.ts",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["src/services/firebaseconfig.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/services/friendservice.ts",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["src/store/authprovider.tsx",{"_index":251,"title":{},"body":{"interfaces/AuthContextProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/store/callsessionprovider.tsx",{"_index":370,"title":{},"body":{"interfaces/CallSessionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/store/userdataprovider.tsx",{"_index":781,"title":{},"body":{"interfaces/UserDataContextProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/styles/commonstyles.ts",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["src/tests/mockdata.ts",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["src/types/auth.ts",{"_index":691,"title":{},"body":{"interfaces/GoogleAuthResponse.html":{},"coverage.html":{}}}],["src/types/commontypes.ts",{"_index":330,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/utils/utils.tsx",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["src/views/audiocallscreen.tsx",{"_index":130,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"coverage.html":{}}}],["src/views/callscreen.tsx",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["src/views/chatdetails.tsx",{"_index":392,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/views/chatsscreen.tsx",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["src/views/contactsscreen.tsx",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/views/incomingcallscreen.tsx",{"_index":699,"title":{},"body":{"interfaces/IncomingCallScreenProps.html":{},"coverage.html":{}}}],["src/views/incomingcallscreenwrapper.tsx",{"_index":711,"title":{},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{},"coverage.html":{}}}],["src/views/invitationsscreen.tsx",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["src/views/loadingscreen.tsx",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["src/views/loginscreen.tsx",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/views/settingsscreen.tsx",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["src/views/videocallscreen.tsx",{"_index":861,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["stacknavigationprop",{"_index":712,"title":{},"body":{"interfaces/IncomingCallScreenWrapperProps.html":{},"miscellaneous/typealiases.html":{}}}],["start",{"_index":469,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["statements",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":352,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"dependencies.html":{}}}],["storage",{"_index":261,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/UserDataContextProps.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["storage/async",{"_index":260,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/UserDataContextProps.html":{},"dependencies.html":{}}}],["store/userdataprovider",{"_index":398,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["storeduserdata",{"_index":799,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"miscellaneous/functions.html":{}}}],["style",{"_index":696,"title":{},"body":{"interfaces/IconButtonProps.html":{}}}],["styleprop",{"_index":670,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["styles",{"_index":207,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["styles.acceptbutton",{"_index":307,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["styles.container",{"_index":683,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["styles.input",{"_index":685,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["styles.primarybutton",{"_index":305,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["styles.rejectbutton",{"_index":308,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["styles.secondarybutton",{"_index":306,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["styles/commonstyles",{"_index":145,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["stylesheet",{"_index":135,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["stylesheet.create",{"_index":208,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["subheader",{"_index":736,"title":{},"body":{"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{}}}],["subscribetocallsession",{"_index":140,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"coverage.html":{}}}],["success",{"_index":82,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["svg",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["switchcamera",{"_index":118,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["tab",{"_index":767,"title":{},"body":{"interfaces/SegmentedControlProps.html":{},"coverage.html":{}}}],["tabactive",{"_index":776,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["table",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["tabscontainer",{"_index":772,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["tabtext",{"_index":778,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["temporary",{"_index":676,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["test",{"_index":41,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["testing",{"_index":36,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["tests/mockdata",{"_index":505,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["text",{"_index":134,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["textalign",{"_index":633,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["textalign=\"center",{"_index":761,"title":{},"body":{"interfaces/SearchBarProps.html":{}}}],["textcolor",{"_index":680,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["textinput",{"_index":669,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["textinputprops",{"_index":664,"title":{},"body":{"interfaces/FlatTextInputProps.html":{},"interfaces/SearchBarProps.html":{}}}],["textinputref",{"_index":675,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["textinputref.current?.focus",{"_index":688,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["theirmessage",{"_index":468,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["throw",{"_index":282,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["timerid",{"_index":188,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["timestamp",{"_index":335,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["title",{"_index":291,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{}}}],["tmp",{"_index":875,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["todo",{"_index":874,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["togglecamera",{"_index":115,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["togglecamera(!cameraon",{"_index":869,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["togglemute",{"_index":109,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["togglemute(!muted",{"_index":200,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["token",{"_index":11,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"coverage.html":{}}}],["top",{"_index":516,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["touchableopacity",{"_index":296,"title":{},"body":{"interfaces/ButtonProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["touchablewithoutfeedback",{"_index":673,"title":{},"body":{"interfaces/FlatTextInputProps.html":{}}}],["touserid",{"_index":350,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["tousername",{"_index":351,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["transform",{"_index":525,"title":{},"body":{"interfaces/ContactSectionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["translatey",{"_index":608,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["true",{"_index":102,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/ContactSectionProps.html":{}}}],["try",{"_index":98,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/Invitation.html":{},"interfaces/InviteFormProps.html":{},"interfaces/Message.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1047,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":310,"title":{},"body":{"interfaces/ButtonProps.html":{}}}],["types/commontypes",{"_index":375,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{}}}],["ui/button",{"_index":723,"title":{},"body":{"interfaces/InviteFormProps.html":{}}}],["ui/flatbutton",{"_index":743,"title":{},"body":{"interfaces/PendingInvitationsProps.html":{}}}],["ui/flattextinput",{"_index":722,"title":{},"body":{"interfaces/InviteFormProps.html":{}}}],["uid",{"_index":12,"title":{},"body":{"interfaces/AgoraConfig.html":{},"coverage.html":{}}}],["uncomment",{"_index":644,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["undefined",{"_index":379,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/UserDataContextProps.html":{},"dependencies.html":{}}}],["unread",{"_index":768,"title":{},"body":{"interfaces/SegmentedControlProps.html":{}}}],["unreadcount",{"_index":358,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{}}}],["unsubscribe",{"_index":173,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["unsubscribe.then",{"_index":866,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["updatecallstatus",{"_index":141,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["updatecallstatus(callsessionid",{"_index":197,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["useagora",{"_index":44,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["useanimatedref",{"_index":495,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["useanimatedstyle",{"_index":496,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["useauth",{"_index":279,"title":{},"body":{"interfaces/AuthContextProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["usecallback",{"_index":21,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["usecallback((enable",{"_index":116,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["usecallback(async",{"_index":69,"title":{},"body":{"interfaces/AgoraConfig.html":{}}}],["usecallsession",{"_index":388,"title":{},"body":{"interfaces/CallSessionProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["usechatmessages",{"_index":399,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"coverage.html":{}}}],["usechatmessages(chatid",{"_index":428,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["usecontext",{"_index":258,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["usecontext(authcontext",{"_index":281,"title":{},"body":{"interfaces/AuthContextProps.html":{}}}],["usecontext(callsessioncontext",{"_index":389,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["usecontext(userdatacontext",{"_index":844,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["used",{"_index":33,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["useeffect",{"_index":20,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["useheaderheight",{"_index":395,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{}}}],["usememo",{"_index":478,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["usenavigation",{"_index":138,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["user",{"_index":85,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/UserDataContextProps.html":{}}}],["user.email",{"_index":835,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["user.id",{"_index":829,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["user.invitationcode",{"_index":838,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["user.name",{"_index":834,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["user.picture",{"_index":837,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["user_data_key",{"_index":798,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["userdata",{"_index":337,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatItem.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/UserInfoProps.html":{},"coverage.html":{}}}],["userdatacontext",{"_index":793,"title":{},"body":{"interfaces/UserDataContextProps.html":{},"coverage.html":{}}}],["userdatacontextprops",{"_index":780,"title":{"interfaces/UserDataContextProps.html":{}},"body":{"interfaces/UserDataContextProps.html":{},"coverage.html":{}}}],["userdataprovider",{"_index":374,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["userdataprovider(__namedparameters",{"_index":1041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userdoc",{"_index":826,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["useref",{"_index":18,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{}}}],["useref(null",{"_index":46,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/FlatTextInputProps.html":{}}}],["useremail",{"_index":785,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["userid",{"_index":343,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/UserDataContextProps.html":{}}}],["userinfo",{"_index":849,"title":{},"body":{"interfaces/UserInfoProps.html":{},"coverage.html":{}}}],["userinfo.name",{"_index":851,"title":{},"body":{"interfaces/UserInfoProps.html":{}}}],["userinfoprops",{"_index":846,"title":{"interfaces/UserInfoProps.html":{}},"body":{"interfaces/UserInfoProps.html":{},"coverage.html":{}}}],["username",{"_index":426,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["userpicture",{"_index":786,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["users",{"_index":828,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["usersnapshot",{"_index":830,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["usersnapshot.exists",{"_index":832,"title":{},"body":{"interfaces/UserDataContextProps.html":{}}}],["usesharedvalue",{"_index":497,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["usesharedvalue(0",{"_index":553,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["usesharedvalue(false",{"_index":555,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["usestate",{"_index":19,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["usestate(0",{"_index":172,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["usestate(false",{"_index":50,"title":{},"body":{"interfaces/AgoraConfig.html":{},"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["usestate(null",{"_index":381,"title":{},"body":{"interfaces/CallSessionProps.html":{}}}],["usestate(true",{"_index":169,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["useuserdata",{"_index":373,"title":{},"body":{"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/UserDataContextProps.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils/utils",{"_index":151,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/UserDataContextProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["value",{"_index":278,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["variable",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["vector",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":1043,"title":{},"body":{"properties.html":{}}}],["video",{"_index":334,"title":{},"body":{"interfaces/CallData.html":{},"interfaces/CallSession.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatItem.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/Contact.html":{},"interfaces/ContactSectionsType.html":{},"interfaces/Invitation.html":{},"interfaces/Message.html":{},"interfaces/UserData.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["videocall",{"_index":432,"title":{},"body":{"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/IncomingCallScreenWrapperProps.html":{}}}],["videocallcontrols",{"_index":857,"title":{},"body":{"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["videocallcontrolsprops",{"_index":852,"title":{"interfaces/VideoCallControlsProps.html":{}},"body":{"interfaces/VideoCallControlsProps.html":{},"coverage.html":{}}}],["videocallpartnercontainer",{"_index":882,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["videocallscreen",{"_index":864,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["videocallscreenprops",{"_index":860,"title":{"interfaces/VideoCallScreenProps.html":{}},"body":{"interfaces/VideoCallScreenProps.html":{},"coverage.html":{}}}],["videocontrolscontainer",{"_index":879,"title":{},"body":{"interfaces/VideoCallScreenProps.html":{}}}],["view",{"_index":133,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["viewableitems",{"_index":615,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["viewableitems[half]?.section",{"_index":618,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["viewoffset",{"_index":587,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["viewposition",{"_index":588,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["viewstyle",{"_index":671,"title":{},"body":{"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{}}}],["void",{"_index":263,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatButtonProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IconButtonProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/SearchBarProps.html":{},"interfaces/SegmentedControlProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{}}}],["web",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":222,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ButtonProps.html":{},"interfaces/ChatHeaderProps.html":{},"interfaces/ChatHeaderProps-1.html":{},"interfaces/ChatMessageItemProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/DefaultCallControlsProps.html":{},"interfaces/FlatTextInputProps.html":{},"interfaces/IncomingCallScreenProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/PendingInvitationsProps.html":{},"interfaces/UserInfoProps.html":{},"interfaces/VideoCallControlsProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}],["witaj",{"_index":850,"title":{},"body":{"interfaces/UserInfoProps.html":{}}}],["within",{"_index":285,"title":{},"body":{"interfaces/AuthContextProps.html":{},"interfaces/CallSessionProps.html":{},"interfaces/UserDataContextProps.html":{}}}],["withtiming",{"_index":498,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["withtiming(index",{"_index":578,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["withtiming(snapto",{"_index":577,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["y",{"_index":552,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["y.value",{"_index":576,"title":{},"body":{"interfaces/ContactSectionProps.html":{}}}],["zindex",{"_index":249,"title":{},"body":{"interfaces/AudioCallScreenProps.html":{},"interfaces/ContactSectionProps.html":{},"interfaces/InviteFormProps.html":{},"interfaces/VideoCallScreenProps.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AgoraConfig.html":{"url":"interfaces/AgoraConfig.html","title":"interface - AgoraConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AgoraConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hooks/useAgora.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appId\n                                        \n                                \n                                \n                                        \n                                            channelName\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { useRef, useState, useEffect, useCallback } from \"react\";\nimport {\n  createAgoraRtcEngine,\n  IRtcEngine,\n  IRtcEngineEventHandler,\n  ChannelProfileType,\n  ClientRoleType,\n} from \"react-native-agora\";\n\nimport { PermissionsAndroid, Platform } from \"react-native\";\n\ninterface AgoraConfig {\n  appId: string;\n  channelName: string;\n  token: string;\n  uid: number;\n}\n\n// This configuration is used to connect to the Agora service for testing purposes.\nconst config = {\n  appId: \"f2f502f3c8ee422b9511b9d0c04e6821\",\n  channelName: \"test\",\n  token:\n    \"007eJxTYDi1V8Quy9dq9dRuRf83y2X3qUmmbk+JFd15d8vJC5VrjzQqMKQZpZkaGKUZJ1ukppoYGSVZmhoaJlmmGCQbmKSaWRgZJs1rTm8IZGR4M20xAyMUgvgsDCWpxSUMDABbnyA3\",\n  uid: 0,\n} as AgoraConfig;\n\nconst useAgora = () => {\n  const { appId, channelName, token, uid } = config;\n  const engineRef = useRef(null);\n  const eventHandlerRef = useRef({});\n  const [isJoined, setIsJoined] = useState(false);\n  const [remoteUid, setRemoteUid] = useState([]);\n  const [permissionsGranted, setPermissionsGranted] = useState(false);\n\n  useEffect(() => {\n    const requestPermissions = async () => {\n      if (Platform.OS === \"android\") {\n        const granted = await PermissionsAndroid.requestMultiple([\n          PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n          PermissionsAndroid.PERMISSIONS.CAMERA,\n        ]);\n        setPermissionsGranted(\n          granted[\"android.permission.RECORD_AUDIO\"] ===\n            PermissionsAndroid.RESULTS.GRANTED &&\n            granted[\"android.permission.CAMERA\"] ===\n              PermissionsAndroid.RESULTS.GRANTED\n        );\n      } else {\n        setPermissionsGranted(true);\n      }\n    };\n\n    requestPermissions();\n  }, []);\n\n  const init = useCallback(async () => {\n    if (!permissionsGranted || engineRef.current) return;\n\n    engineRef.current = createAgoraRtcEngine();\n    engineRef.current.initialize({\n      appId: appId,\n      channelProfile: ChannelProfileType.ChannelProfileCommunication,\n    });\n\n    eventHandlerRef.current = {\n      onJoinChannelSuccess: (_connection, _elapsed) => {\n        setIsJoined(true);\n        console.log(\"Join channel success\");\n      },\n      onUserJoined: (_connection, uid, _elapsed) => {\n        console.log(\"Remote user joined:\", uid);\n        setRemoteUid((prevUids) => [...prevUids, uid]);\n      },\n      onUserOffline: (_connection, uid, _reason) => {\n        console.log(\"Remote user offline:\", uid);\n        setRemoteUid((prevUids) => prevUids.filter((id) => id !== uid));\n      },\n    };\n\n    engineRef.current.registerEventHandler(eventHandlerRef.current);\n\n    // await engineRef.current.enableAudio();\n    engineRef.current.enableVideo();\n  }, [appId, permissionsGranted]);\n\n  const joinChannel = useCallback(async () => {\n    if (!engineRef.current) return;\n    try {\n      engineRef.current?.joinChannel(token, channelName, uid, {\n        clientRoleType: ClientRoleType.ClientRoleBroadcaster,\n        autoSubscribeAudio: true,\n      });\n    } catch (error) {\n      console.warn(\"Join channel error\", error);\n    }\n  }, [token, channelName, uid]);\n\n  const leaveChannel = async () => {\n    if (!engineRef.current) return;\n    engineRef.current.leaveChannel();\n    setIsJoined(false);\n  };\n\n  const toggleMute = (mute: boolean) => {\n    engineRef.current?.muteLocalAudioStream(mute);\n  };\n\n  const setSpeakerphoneOn = (on: boolean) => {\n    engineRef.current?.setEnableSpeakerphone(on);\n  };\n\n  const toggleCamera = useCallback((enable: boolean) => {\n    engineRef.current?.muteLocalVideoStream(!enable);\n  }, []);\n\n  const switchCamera = useCallback(() => {\n    engineRef.current?.switchCamera();\n  }, []);\n\n  const destroy = useCallback(async () => {\n    if (!engineRef.current) return;\n    await engineRef.current.leaveChannel();\n    engineRef.current.unregisterEventHandler(eventHandlerRef.current!);\n    engineRef.current?.release();\n    engineRef.current = null;\n    setIsJoined(false);\n    setRemoteUid([]);\n  }, []);\n\n  useEffect(() => {\n    init().then(() => {\n      joinChannel();\n    });\n\n    return () => {\n      destroy();\n    };\n  }, [init, destroy]);\n\n  return {\n    isJoined,\n    remoteUid,\n    toggleMute,\n    setSpeakerphoneOn,\n    toggleCamera,\n    switchCamera,\n    leaveChannel,\n  };\n};\n\nexport default useAgora;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioCallScreenProps.html":{"url":"interfaces/AudioCallScreenProps.html","title":"interface - AudioCallScreenProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioCallScreenProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/AudioCallScreen.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            route\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         RouteProp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouteProp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet, Image, Alert } from \"react-native\";\nimport { RouteProp, useNavigation } from \"@react-navigation/native\";\nimport {\n  subscribeToCallSession,\n  updateCallStatus,\n} from \"../services/callSessionService\";\nimport useAgora from \"../hooks/useAgora\";\nimport { Colors } from \"../styles/commonStyles\";\nimport DiamondBackground from \"../components/ui/DiamondBackground\";\nimport DefaultCallControls from \"../components/DefaultCallControls\";\nimport { formatCallDuration } from \"../utils/utils\";\nimport InactiveCallOverlay from \"../components/InactiveCallOverlay\";\nimport { InteractionStackParamList } from \"../../App\";\n\ninterface AudioCallScreenProps {\n  route: RouteProp;\n}\n\nconst AudioCallScreen: React.FC = ({ route }) => {\n  const navigation = useNavigation();\n  const { callData } = route.params;\n  const { callPartner, callSessionId } = callData;\n  const [muted, setMuted] = useState(false);\n  const [speakerOn, setSpeakerOn] = useState(false);\n  const [isCallActive, setIsCallActive] = useState(true);\n  const [callDuration, setCallDuration] = useState(0);\n\n  const { isJoined, leaveChannel, toggleMute, setSpeakerphoneOn } = useAgora();\n\n  useEffect(() => {\n    const unsubscribe = subscribeToCallSession(\n      callSessionId,\n      (data) => {\n        if ([\"rejected\", \"ended\"].includes(data.status)) {\n          setIsCallActive(false);\n          Alert.alert(\n            \"Information\",\n            `The other party has ${data.status} the call.`\n          );\n          setTimeout(() => navigation.goBack(), 2000);\n        }\n      },\n      console.error\n    );\n    return () => unsubscribe();\n  }, [callSessionId]);\n\n  useEffect(() => {\n    isJoined && setIsCallActive(true);\n  }, [isJoined]);\n\n  useEffect(() => {\n    if (!isCallActive) {\n      leaveChannel();\n    }\n  }, [isCallActive, leaveChannel]);\n\n  useEffect(() => {\n    let timerId: NodeJS.Timeout;\n    if (isCallActive) {\n      timerId = setInterval(() => setCallDuration((prev) => prev + 1), 1000);\n    }\n    return () => clearInterval(timerId);\n  }, [isCallActive]);\n\n  const handleEndCall = async () => {\n    await updateCallStatus(callSessionId, \"ended\");\n    leaveChannel();\n    navigation.goBack();\n  };\n\n  const handleMuteToggle = () => {\n    toggleMute(!muted);\n    setMuted((muted) => !muted);\n  };\n\n  const handleSpeakerToggle = () => {\n    setSpeakerphoneOn(!speakerOn);\n    setSpeakerOn((speakerOn) => !speakerOn);\n  };\n\n  return (\n    <>\n      \n      \n        {!isCallActive && }\n        \n          \n          {callPartner.name}\n\n          \n            {formatCallDuration(callDuration)}\n          \n        \n\n        \n          \n        \n      \n    \n  );\n};\n\nexport default AudioCallScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n    paddingTop: 50,\n  },\n  callPartnerContainer: {\n    alignItems: \"center\",\n    marginBottom: 150,\n  },\n  avatar: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginBottom: 20,\n    borderWidth: 3,\n    borderColor: Colors.primary,\n  },\n  callPartnerName: {\n    fontSize: 26,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n    marginBottom: 10,\n  },\n  callDuration: {\n    fontSize: 20,\n    color: Colors.textDimmed,\n    marginBottom: 40,\n  },\n  defaultControlsContainer: {\n    position: \"absolute\",\n    bottom: 20,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 30,\n    zIndex: 30,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthContextProps.html":{"url":"interfaces/AuthContextProps.html","title":"interface - AuthContextProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthContextProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/AuthProvider.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authenticate\n                                        \n                                \n                                \n                                        \n                                            fetchStoredToken\n                                        \n                                \n                                \n                                        \n                                            isAuthenticated\n                                        \n                                \n                                \n                                        \n                                            logout\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authenticate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authenticate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchStoredToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchStoredToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthenticated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logout:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createContext, useContext, useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\ninterface AuthContextProps {\n  token: string;\n  isAuthenticated: boolean;\n  fetchStoredToken: () => Promise;\n  authenticate: (token: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [authToken, setAuthToken] = useState();\n\n  const AUTH_TOKEN_KEY = \"@authToken\";\n\n  async function fetchStoredToken() {\n    try {\n      const token = await AsyncStorage.getItem(AUTH_TOKEN_KEY);\n      if (token) {\n        return token;\n      }\n    } catch (error) {\n      return null;\n    }\n    return null;\n  }\n\n  function authenticate(token: string) {\n    setAuthToken(token);\n    AsyncStorage.setItem(AUTH_TOKEN_KEY, token);\n  }\n\n  function logout() {\n    setAuthToken(null);\n    AsyncStorage.removeItem(AUTH_TOKEN_KEY);\n  }\n\n  const value = {\n    token: authToken || \"\",\n    isAuthenticated: !!authToken,\n    fetchStoredToken: fetchStoredToken,\n    authenticate: authenticate,\n    logout: logout,\n  };\n\n  return {children};\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within a AuthProvider\");\n  }\n  return context;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonProps.html":{"url":"interfaces/ButtonProps.html","title":"interface - ButtonProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ButtonProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ui/Button.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            onPress\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onPress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onPress:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"primary\" | \"secondary\" | \"accept\" | \"reject\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"primary\" | \"secondary\" | \"accept\" | \"reject\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport {\n  TouchableOpacity,\n  Text,\n  StyleSheet,\n  GestureResponderEvent,\n} from \"react-native\";\nimport { Colors } from \"../../styles/commonStyles\";\n\ninterface ButtonProps {\n  title: string;\n  onPress: (event: GestureResponderEvent) => void;\n  disabled?: boolean;\n  type?: \"primary\" | \"secondary\" | \"accept\" | \"reject\";\n  width?: number | string;\n  height?: number | string;\n}\n\nconst DEFAULT_WIDTH = 30;\nconst DEFAULT_HIGHT = 8;\n\nconst Button: React.FC = ({\n  title,\n  onPress,\n  disabled,\n  type = \"primary\",\n  width = \"auto\",\n  height = \"auto\",\n}) => {\n  const buttonColorStyle =\n    type === \"primary\"\n      ? styles.primaryButton\n      : type === \"secondary\"\n      ? styles.secondaryButton\n      : type === \"accept\"\n      ? styles.acceptButton\n      : styles.rejectButton;\n  const dynamicPaddingHorizontal =\n    typeof width === \"number\" ? width / 2 : DEFAULT_WIDTH;\n  const dynamicPaddingVertical =\n    typeof height === \"number\" ? height / 2 : DEFAULT_HIGHT;\n\n  return (\n    \n      \n        {title}\n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 25,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderWidth: 2,\n  },\n  primaryButton: {\n    backgroundColor: Colors.primaryTransparent,\n    borderColor: Colors.primaryTransparent,\n  },\n  secondaryButton: {\n    backgroundColor: Colors.secondaryTransparent,\n    borderColor: Colors.secondaryTransparent,\n  },\n  acceptButton: {\n    backgroundColor: Colors.acceptTransparent,\n    borderColor: Colors.acceptTransparent,\n    borderRadius: 1000,\n  },\n  rejectButton: {\n    backgroundColor: Colors.dangerTransparent,\n    borderColor: Colors.dangerTransparent,\n    borderRadius: 1000,\n  },\n  buttonDisabled: {\n    color: Colors.textAccent,\n    backgroundColor: Colors.disabledBackground,\n    borderColor: Colors.disabledBackground,\n  },\n  buttonText: {\n    color: Colors.textAccent,\n    fontSize: 15,\n    fontWeight: \"500\",\n  },\n  buttonTextDisabled: {\n    color: Colors.textDimmed,\n  },\n});\n\nexport default Button;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CallData.html":{"url":"interfaces/CallData.html","title":"interface - CallData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CallData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callPartner\n                                        \n                                \n                                \n                                        \n                                            callSessionId\n                                        \n                                \n                                \n                                        \n                                            callType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callPartner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callPartner:         Contact\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Contact\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callSessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callSessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callType:     \"audio\" | \"video\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"audio\" | \"video\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CallSession.html":{"url":"interfaces/CallSession.html","title":"interface - CallSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CallSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            calleeId\n                                        \n                                \n                                \n                                        \n                                            callerId\n                                        \n                                \n                                \n                                        \n                                            callType\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        calleeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        calleeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callType:     \"audio\" | \"video\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"audio\" | \"video\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         CallStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CallStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CallSessionProps.html":{"url":"interfaces/CallSessionProps.html","title":"interface - CallSessionProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CallSessionProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/CallSessionProvider.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeCall\n                                        \n                                \n                                \n                                        \n                                            setActiveCall\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeCall\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeCall:         CallSession | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CallSession | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setActiveCall\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setActiveCall:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useUserData } from \"./UserDataProvider\";\nimport { CallData, CallSession } from \"../types/commonTypes\";\nimport { setupCallListener } from \"../services/callSessionService\";\nimport { AuthenticatedStackProp } from \"../../App\";\n\ninterface CallSessionProps {\n  activeCall: CallSession | null;\n  setActiveCall: (call: CallSession | null) => void;\n}\n\nconst CallSessionContext = createContext(\n  undefined\n);\n\nexport function CallSessionProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [activeCall, setActiveCall] = useState(null);\n  const { userId } = useUserData();\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const unsubscribe = setupCallListener(userId, (callData, sessionId) => {\n      navigation.navigate(\"InteractionStack\", {\n        screen: \"IncomingCall\",\n        params: {\n          callData: { ...callData, callSessionId: sessionId } as CallData,\n        },\n      });\n    });\n\n    return () => {\n      unsubscribe && unsubscribe();\n    };\n  }, [userId, navigation]);\n\n  const value = {\n    activeCall: activeCall,\n    setActiveCall: setActiveCall,\n  };\n\n  return (\n    \n      {children}\n    \n  );\n}\n\nexport function useCallSession() {\n  const context = useContext(CallSessionContext);\n  if (!context) {\n    throw new Error(\"useCallSession must be used within a CallSessionProvider\");\n  }\n  return context;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatHeaderProps.html":{"url":"interfaces/ChatHeaderProps.html","title":"interface - ChatHeaderProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatHeaderProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/ChatDetails.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactAvatar\n                                        \n                                \n                                \n                                        \n                                            contactName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  FlatList,\n  Image,\n  StyleSheet,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport { RouteProp, useNavigation } from \"@react-navigation/native\";\nimport { useHeaderHeight } from \"@react-navigation/elements\";\nimport { AuthenticatedStackProp, ChatsStackParamList } from \"../../App\";\nimport { Colors } from \"../styles/commonStyles\";\nimport { useUserData } from \"../store/UserDataProvider\";\nimport { Message } from \"../types/commonTypes\";\nimport { useChatMessages } from \"../hooks/useChatMessages\";\nimport { getCallSessionId, sendMessage } from \"../services/chatService\";\nimport DiamondBackground from \"../components/ui/DiamondBackground\";\nimport IconButton from \"../components/ui/IconButton\";\nimport FlatTextInput from \"../components/ui/FlatTextInput\";\n\ninterface ChatHeaderProps {\n  contactName: string;\n  contactAvatar: string;\n}\n\ninterface ChatHeaderProps {\n  contactName: string;\n  contactAvatar: string;\n  onInitiateCall: (callType: \"audio\" | \"video\") => void;\n}\n\nconst ChatHeader: React.FC = ({\n  contactName,\n  contactAvatar,\n  onInitiateCall,\n}) => {\n  const navigation = useNavigation();\n\n  return (\n    \n      \n          navigation.navigate(\"Chats\", {\n            screen: \"ChatsList\",\n            params: {},\n          })\n        }\n      />\n      \n        \n        {contactName}\n      \n\n      \n         onInitiateCall(\"audio\")}\n        />\n         onInitiateCall(\"video\")}\n        />\n      \n    \n  );\n};\n\ninterface ChatMessageItemProps {\n  item: Message;\n  userId: string;\n}\n\nconst ChatMessageItem: React.FC = ({ item, userId }) => {\n  const isCurrentUser = item.senderId === userId;\n  return (\n    \n      {item.imageUrl ? (\n        \n      ) : (\n        {item.text}\n      )}\n    \n  );\n};\n\ntype ChatDetailsRouteProp = RouteProp;\n\nconst ChatDetails: React.FC = ({ route }) => {\n  const { chatId, contactId, contactName, contactAvatar } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { userId, userName } = useUserData();\n  const navigation = useNavigation();\n  const messages = useChatMessages(chatId, userId);\n\n  const initiateCall = async (callType: \"audio\" | \"video\") => {\n    try {\n      const callSessionId = await getCallSessionId(userId, contactId, callType);\n\n      navigation.navigate(\"InteractionStack\", {\n        screen: callType === \"audio\" ? \"AudioCall\" : \"VideoCall\",\n        params: {\n          callData: {\n            callPartner: {\n              id: chatId,\n              name: contactName,\n              avatar: contactAvatar,\n            },\n            callType,\n            callSessionId: callSessionId,\n          },\n        },\n      });\n    } catch (error) {\n      console.error(\"initiateCall error:\", error);\n    }\n  };\n\n  const renderMessage = ({ item }: { item: Message }) => {\n    return ;\n  };\n\n  const headerHeight = useHeaderHeight();\n  return (\n    \n      <>\n        \n        \n\n        {/* Messages */}\n         item.id}\n          contentContainerStyle={styles.messagesContainer}\n        />\n\n        {/* Message Input */}\n        \n           {}} />\n          \n           {\n              await sendMessage(chatId, userId, userName, newMessage);\n              setNewMessage(\"\");\n            }}\n          />\n        \n      \n    \n  );\n};\n\nexport default ChatDetails;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.background,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: Colors.background,\n  },\n  headerNameWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  headerName: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n    marginLeft: 45,\n  },\n  headerAvatar: {\n    position: \"absolute\",\n    width: 36,\n    height: 36,\n    borderRadius: 36 / 2,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderColor: \"#333\",\n    backgroundColor: Colors.background,\n  },\n  messagesContainer: {\n    paddingHorizontal: 10,\n    paddingBottom: 10,\n  },\n  messageContainer: {\n    marginVertical: 5,\n    padding: 10,\n    borderRadius: 8,\n    maxWidth: \"75%\",\n  },\n  myMessage: {\n    alignSelf: \"flex-end\",\n    backgroundColor: Colors.primary,\n  },\n  theirMessage: {\n    alignSelf: \"flex-start\",\n    backgroundColor: \"#444\",\n  },\n  messageText: {\n    fontSize: 16,\n    color: Colors.textLight,\n  },\n  messageImage: {\n    width: 200,\n    height: 150,\n    borderRadius: 8,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatHeaderProps-1.html":{"url":"interfaces/ChatHeaderProps-1.html","title":"interface - ChatHeaderProps-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatHeaderProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/ChatDetails.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactAvatar\n                                        \n                                \n                                \n                                        \n                                            contactName\n                                        \n                                \n                                \n                                        \n                                            onInitiateCall\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onInitiateCall\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onInitiateCall:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  FlatList,\n  Image,\n  StyleSheet,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport { RouteProp, useNavigation } from \"@react-navigation/native\";\nimport { useHeaderHeight } from \"@react-navigation/elements\";\nimport { AuthenticatedStackProp, ChatsStackParamList } from \"../../App\";\nimport { Colors } from \"../styles/commonStyles\";\nimport { useUserData } from \"../store/UserDataProvider\";\nimport { Message } from \"../types/commonTypes\";\nimport { useChatMessages } from \"../hooks/useChatMessages\";\nimport { getCallSessionId, sendMessage } from \"../services/chatService\";\nimport DiamondBackground from \"../components/ui/DiamondBackground\";\nimport IconButton from \"../components/ui/IconButton\";\nimport FlatTextInput from \"../components/ui/FlatTextInput\";\n\ninterface ChatHeaderProps {\n  contactName: string;\n  contactAvatar: string;\n}\n\ninterface ChatHeaderProps {\n  contactName: string;\n  contactAvatar: string;\n  onInitiateCall: (callType: \"audio\" | \"video\") => void;\n}\n\nconst ChatHeader: React.FC = ({\n  contactName,\n  contactAvatar,\n  onInitiateCall,\n}) => {\n  const navigation = useNavigation();\n\n  return (\n    \n      \n          navigation.navigate(\"Chats\", {\n            screen: \"ChatsList\",\n            params: {},\n          })\n        }\n      />\n      \n        \n        {contactName}\n      \n\n      \n         onInitiateCall(\"audio\")}\n        />\n         onInitiateCall(\"video\")}\n        />\n      \n    \n  );\n};\n\ninterface ChatMessageItemProps {\n  item: Message;\n  userId: string;\n}\n\nconst ChatMessageItem: React.FC = ({ item, userId }) => {\n  const isCurrentUser = item.senderId === userId;\n  return (\n    \n      {item.imageUrl ? (\n        \n      ) : (\n        {item.text}\n      )}\n    \n  );\n};\n\ntype ChatDetailsRouteProp = RouteProp;\n\nconst ChatDetails: React.FC = ({ route }) => {\n  const { chatId, contactId, contactName, contactAvatar } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { userId, userName } = useUserData();\n  const navigation = useNavigation();\n  const messages = useChatMessages(chatId, userId);\n\n  const initiateCall = async (callType: \"audio\" | \"video\") => {\n    try {\n      const callSessionId = await getCallSessionId(userId, contactId, callType);\n\n      navigation.navigate(\"InteractionStack\", {\n        screen: callType === \"audio\" ? \"AudioCall\" : \"VideoCall\",\n        params: {\n          callData: {\n            callPartner: {\n              id: chatId,\n              name: contactName,\n              avatar: contactAvatar,\n            },\n            callType,\n            callSessionId: callSessionId,\n          },\n        },\n      });\n    } catch (error) {\n      console.error(\"initiateCall error:\", error);\n    }\n  };\n\n  const renderMessage = ({ item }: { item: Message }) => {\n    return ;\n  };\n\n  const headerHeight = useHeaderHeight();\n  return (\n    \n      <>\n        \n        \n\n        {/* Messages */}\n         item.id}\n          contentContainerStyle={styles.messagesContainer}\n        />\n\n        {/* Message Input */}\n        \n           {}} />\n          \n           {\n              await sendMessage(chatId, userId, userName, newMessage);\n              setNewMessage(\"\");\n            }}\n          />\n        \n      \n    \n  );\n};\n\nexport default ChatDetails;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.background,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: Colors.background,\n  },\n  headerNameWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  headerName: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n    marginLeft: 45,\n  },\n  headerAvatar: {\n    position: \"absolute\",\n    width: 36,\n    height: 36,\n    borderRadius: 36 / 2,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderColor: \"#333\",\n    backgroundColor: Colors.background,\n  },\n  messagesContainer: {\n    paddingHorizontal: 10,\n    paddingBottom: 10,\n  },\n  messageContainer: {\n    marginVertical: 5,\n    padding: 10,\n    borderRadius: 8,\n    maxWidth: \"75%\",\n  },\n  myMessage: {\n    alignSelf: \"flex-end\",\n    backgroundColor: Colors.primary,\n  },\n  theirMessage: {\n    alignSelf: \"flex-start\",\n    backgroundColor: \"#444\",\n  },\n  messageText: {\n    fontSize: 16,\n    color: Colors.textLight,\n  },\n  messageImage: {\n    width: 200,\n    height: 150,\n    borderRadius: 8,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatItem.html":{"url":"interfaces/ChatItem.html","title":"interface - ChatItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactAvatar\n                                        \n                                \n                                \n                                        \n                                            contactId\n                                        \n                                \n                                \n                                        \n                                            contactName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastMessageDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastMessageText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unreadCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactAvatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactAvatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastMessageDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastMessageDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastMessageText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastMessageText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unreadCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unreadCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessageItemProps.html":{"url":"interfaces/ChatMessageItemProps.html","title":"interface - ChatMessageItemProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessageItemProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/ChatDetails.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            item\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  FlatList,\n  Image,\n  StyleSheet,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport { RouteProp, useNavigation } from \"@react-navigation/native\";\nimport { useHeaderHeight } from \"@react-navigation/elements\";\nimport { AuthenticatedStackProp, ChatsStackParamList } from \"../../App\";\nimport { Colors } from \"../styles/commonStyles\";\nimport { useUserData } from \"../store/UserDataProvider\";\nimport { Message } from \"../types/commonTypes\";\nimport { useChatMessages } from \"../hooks/useChatMessages\";\nimport { getCallSessionId, sendMessage } from \"../services/chatService\";\nimport DiamondBackground from \"../components/ui/DiamondBackground\";\nimport IconButton from \"../components/ui/IconButton\";\nimport FlatTextInput from \"../components/ui/FlatTextInput\";\n\ninterface ChatHeaderProps {\n  contactName: string;\n  contactAvatar: string;\n}\n\ninterface ChatHeaderProps {\n  contactName: string;\n  contactAvatar: string;\n  onInitiateCall: (callType: \"audio\" | \"video\") => void;\n}\n\nconst ChatHeader: React.FC = ({\n  contactName,\n  contactAvatar,\n  onInitiateCall,\n}) => {\n  const navigation = useNavigation();\n\n  return (\n    \n      \n          navigation.navigate(\"Chats\", {\n            screen: \"ChatsList\",\n            params: {},\n          })\n        }\n      />\n      \n        \n        {contactName}\n      \n\n      \n         onInitiateCall(\"audio\")}\n        />\n         onInitiateCall(\"video\")}\n        />\n      \n    \n  );\n};\n\ninterface ChatMessageItemProps {\n  item: Message;\n  userId: string;\n}\n\nconst ChatMessageItem: React.FC = ({ item, userId }) => {\n  const isCurrentUser = item.senderId === userId;\n  return (\n    \n      {item.imageUrl ? (\n        \n      ) : (\n        {item.text}\n      )}\n    \n  );\n};\n\ntype ChatDetailsRouteProp = RouteProp;\n\nconst ChatDetails: React.FC = ({ route }) => {\n  const { chatId, contactId, contactName, contactAvatar } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { userId, userName } = useUserData();\n  const navigation = useNavigation();\n  const messages = useChatMessages(chatId, userId);\n\n  const initiateCall = async (callType: \"audio\" | \"video\") => {\n    try {\n      const callSessionId = await getCallSessionId(userId, contactId, callType);\n\n      navigation.navigate(\"InteractionStack\", {\n        screen: callType === \"audio\" ? \"AudioCall\" : \"VideoCall\",\n        params: {\n          callData: {\n            callPartner: {\n              id: chatId,\n              name: contactName,\n              avatar: contactAvatar,\n            },\n            callType,\n            callSessionId: callSessionId,\n          },\n        },\n      });\n    } catch (error) {\n      console.error(\"initiateCall error:\", error);\n    }\n  };\n\n  const renderMessage = ({ item }: { item: Message }) => {\n    return ;\n  };\n\n  const headerHeight = useHeaderHeight();\n  return (\n    \n      <>\n        \n        \n\n        {/* Messages */}\n         item.id}\n          contentContainerStyle={styles.messagesContainer}\n        />\n\n        {/* Message Input */}\n        \n           {}} />\n          \n           {\n              await sendMessage(chatId, userId, userName, newMessage);\n              setNewMessage(\"\");\n            }}\n          />\n        \n      \n    \n  );\n};\n\nexport default ChatDetails;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.background,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: Colors.background,\n  },\n  headerNameWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  headerName: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n    marginLeft: 45,\n  },\n  headerAvatar: {\n    position: \"absolute\",\n    width: 36,\n    height: 36,\n    borderRadius: 36 / 2,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderColor: \"#333\",\n    backgroundColor: Colors.background,\n  },\n  messagesContainer: {\n    paddingHorizontal: 10,\n    paddingBottom: 10,\n  },\n  messageContainer: {\n    marginVertical: 5,\n    padding: 10,\n    borderRadius: 8,\n    maxWidth: \"75%\",\n  },\n  myMessage: {\n    alignSelf: \"flex-end\",\n    backgroundColor: Colors.primary,\n  },\n  theirMessage: {\n    alignSelf: \"flex-start\",\n    backgroundColor: \"#444\",\n  },\n  messageText: {\n    fontSize: 16,\n    color: Colors.textLight,\n  },\n  messageImage: {\n    width: 200,\n    height: 150,\n    borderRadius: 8,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            contactId\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactSectionProps.html":{"url":"interfaces/ContactSectionProps.html","title":"interface - ContactSectionProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactSectionProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ContactSection.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contactsData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contactsData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contactsData:         Contact[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Contact[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  View,\n  Text,\n  SectionList,\n  Image,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport sectionListGetItemLayout from \"react-native-section-list-get-item-layout\";\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n  clamp,\n  Extrapolation,\n  interpolate,\n  measure,\n  runOnJS,\n  runOnUI,\n  SharedValue,\n  useAnimatedRef,\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from \"react-native-reanimated\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Contact, ContactSectionsType } from \"../types/commonTypes\";\nimport { Colors } from \"../styles/commonStyles\";\nimport { alphabet } from \"../utils/utils\";\nimport { mockContacts } from \"../tests/mockData\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { AuthenticatedStackProp, ChatsStackParamList } from \"../../App\";\n\nconst ITEM_SPACING = 8;\nconst AVATAR_SIZE = 36;\nconst ITEM_HEIGHT = AVATAR_SIZE + ITEM_SPACING * 2;\nconst SECTION_HEADER_HEIGHT = 50;\nconst ALPHABET_INDICATOR_SIZE = 30;\nconst KNOB_SIZE = 25;\nconst HIT_SLOP = {\n  // controls the area for gesture recognition\n  left: 25,\n  bottom: 25,\n  right: 25,\n  top: 25,\n};\n\ntype AlphabetLetterProps = {\n  index: number;\n  letter: string;\n  scrollableIndex: SharedValue;\n};\n\nconst AlphabetLetter = ({\n  index,\n  letter,\n  scrollableIndex,\n}: AlphabetLetterProps) => {\n  const styles = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        scrollableIndex.value,\n        [index - 1, index, index + 1],\n        [0.5, 1, 0.5],\n        Extrapolation.CLAMP\n      ),\n      transform: [\n        {\n          scale: interpolate(\n            scrollableIndex.value,\n            [index - 2, index, index + 2],\n            [1, 1.5, 1],\n            Extrapolation.CLAMP\n          ),\n        },\n      ],\n    };\n  });\n\n  return (\n    \n      \n        {letter.toUpperCase()}\n      \n    \n  );\n};\n\nfunction generateContactSections(contacts: Contact[]): ContactSectionsType[] {\n  const groupedContacts: { [key: string]: Contact[] } = {};\n\n  contacts.forEach((contact) => {\n    const firstLetter = contact.name[0].toUpperCase();\n    if (!groupedContacts[firstLetter]) {\n      groupedContacts[firstLetter] = [];\n    }\n    groupedContacts[firstLetter].push(contact);\n  });\n\n  const contactSections: ContactSectionsType[] = Object.keys(groupedContacts)\n    .sort()\n    .map((letter, index) => ({\n      title: letter,\n      index,\n      key: `list-${letter}`,\n      data: groupedContacts[letter],\n    }));\n\n  return contactSections;\n}\n\nexport function ContactsListHeader({ title }: { title: string }) {\n  return (\n    \n      {title}\n    \n  );\n}\n\nexport function ContactsListItem({ item }: { item: Contact }) {\n  const navigation = useNavigation();\n  const chatId = [item.userId, item.contactId].sort().join(\"_\");\n  const handleItemPress = () => {\n    navigation.navigate(\"Chats\", {\n      screen: \"ChatDetails\",\n      params: {\n        chatId: chatId,\n        contactId: item.userId,\n        contactName: item.name,\n        contactAvatar: item.avatar,\n      },\n    });\n  };\n  return (\n    \n      \n      \n        {item.name}\n        \n      \n    \n  );\n}\n\ninterface ContactSectionProps {\n  contactsData: Contact[];\n}\n\nexport function ContactSection({ contactsData }: ContactSectionProps) {\n  const [contactItems, setContactItems] = useState(\n    generateContactSections(contactsData)\n  );\n  const y = useSharedValue(0);\n  const isInteracting = useSharedValue(false);\n  const scrollableIndex = useSharedValue(0);\n  const activeScrollIndex = useSharedValue(0);\n  const alphabetRef = useAnimatedRef();\n  const scrollViewRef = useRef(null);\n\n  const firstContactIndex = alphabet.indexOf(\n    contactItems[0]?.title.toLowerCase() ?? alphabet.charAt(0)\n  );\n  const lastContactIndex = alphabet.indexOf(\n    contactItems[contactItems.length - 1]?.title.toLowerCase() ??\n      alphabet.charAt(alphabet.length - 1)\n  );\n\n  const snapIndicatorTo = (index: number) => {\n    runOnUI(() => {\n      if (scrollableIndex.value === index || isInteracting.value) {\n        return;\n      }\n\n      const alphabetLayout = measure(alphabetRef);\n      if (!alphabetLayout) {\n        return;\n      }\n\n      const snapBy =\n        (alphabetLayout.height - KNOB_SIZE) / Math.max(1, alphabet.length - 1);\n      const snapTo = index * snapBy;\n\n      y.value = withTiming(snapTo);\n      scrollableIndex.value = withTiming(index);\n    })();\n  };\n\n  const scrollToLocation = (index: number) => {\n    scrollViewRef.current?.scrollToLocation({\n      itemIndex: 0,\n      sectionIndex: index - firstContactIndex, // adjust for the first section header offset\n      animated: false,\n      viewOffset: 0,\n      viewPosition: 0,\n    });\n  };\n\n  const panGesture = Gesture.Pan()\n    .averageTouches(true)\n    .onBegin(() => {\n      isInteracting.value = true;\n    })\n    .onChange((event) => {\n      const alphabetLayout = measure(alphabetRef);\n      if (!alphabetLayout) {\n        return;\n      }\n      y.value = clamp(\n        (y.value += event.changeY),\n        alphabetLayout.y,\n        alphabetLayout.height - KNOB_SIZE\n      );\n\n      const snapBy =\n        (alphabetLayout.height - KNOB_SIZE) / Math.max(1, alphabet.length - 1);\n\n      scrollableIndex.value = y.value / snapBy;\n      const snapToIndex = Math.round(scrollableIndex.value);\n      const clampedIndex = Math.max(\n        // clamp the index to the first and last contact index\n        firstContactIndex,\n        Math.min(snapToIndex, lastContactIndex)\n      );\n      runOnJS(scrollToLocation)(clampedIndex);\n\n      if (clampedIndex !== activeScrollIndex.value) {\n        activeScrollIndex.value = clampedIndex;\n      }\n    })\n    .onEnd(() => {\n      runOnJS(snapIndicatorTo)(activeScrollIndex.value);\n    })\n    .onFinalize(() => {\n      isInteracting.value = false;\n    });\n\n  const gestureDetectorAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          translateY: y.value,\n        },\n      ],\n    };\n  });\n\n  useEffect(() => {\n    setContactItems(generateContactSections(contactsData));\n    // setContactItems(mockContacts);\n  }, [contactsData]);\n\n  const getItemLayout = useMemo(() => {\n    return sectionListGetItemLayout({\n      getItemHeight: () => ITEM_HEIGHT,\n      getSectionHeaderHeight: () => SECTION_HEADER_HEIGHT,\n    });\n  }, []);\n\n  const onViewableItemsChanged = useMemo(\n    () =>\n      ({\n        viewableItems,\n      }: {\n        viewableItems: { section?: ContactSectionsType }[];\n      }) => {\n        if (isInteracting.value) {\n          return;\n        }\n\n        const half = Math.floor(viewableItems.length / 2);\n        const section = viewableItems[half]?.section;\n        if (section) {\n          const { index } = section as ContactSectionsType;\n          runOnJS(snapIndicatorTo)(index + firstContactIndex); // adjust for the first section header offset\n        }\n      },\n    []\n  );\n\n  return (\n    \n      {contactItems.length > 0 && (\n         (\n            \n          )}\n          renderItem={({ item }) => }\n          keyExtractor={(item) => item.id}\n        />\n      )}\n      {contactItems.length === 0 && (\n        \n          \n            No contacts added.{\"\\n\"}Tap the + button to invite new friends!\n          \n        \n      )}\n\n      {/* Alphabet Indicator */}\n      \n        \n          \n        \n        \n          {[...Array(alphabet.length).keys()].map((i) => {\n            return (\n              \n            );\n          })}\n        \n      \n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  sectionHeader: {\n    height: SECTION_HEADER_HEIGHT,\n    justifyContent: \"center\",\n    paddingLeft: 10,\n  },\n  sectionHeaderText: {\n    fontSize: 20,\n    fontWeight: \"900\",\n    color: Colors.textLight,\n  },\n  text: {\n    color: Colors.textLight,\n    textAlign: \"center\",\n  },\n  contactItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    height: ITEM_HEIGHT,\n  },\n  contactInnerContainer: {\n    flexDirection: \"row\",\n    borderBottomColor: Colors.primary,\n    borderBottomWidth: 0.5,\n    width: \"80%\",\n    height: \"100%\",\n    marginLeft: 5,\n    paddingLeft: 5,\n    paddingBottom: 3,\n    justifyContent: \"space-between\",\n  },\n  contactAvatar: {\n    marginRight: 10,\n    width: AVATAR_SIZE,\n    height: AVATAR_SIZE,\n    borderRadius: AVATAR_SIZE / 2,\n  },\n  contactName: {\n    color: Colors.primary,\n  },\n  knob: {\n    width: KNOB_SIZE,\n    height: KNOB_SIZE,\n    // borderWidth: 4, // for debugging uncomment to see the knob\n    borderColor: Colors.primary,\n    position: \"absolute\",\n    right: KNOB_SIZE,\n    zIndex: 1,\n  },\n});\n\nexport default ContactSection;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactSectionsType.html":{"url":"interfaces/ContactSectionsType.html","title":"interface - ContactSectionsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactSectionsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Contact[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Contact[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultCallControlsProps.html":{"url":"interfaces/DefaultCallControlsProps.html","title":"interface - DefaultCallControlsProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultCallControlsProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/DefaultCallControls.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            muted\n                                        \n                                \n                                \n                                        \n                                            onEndCall\n                                        \n                                \n                                \n                                        \n                                            onMuteToggle\n                                        \n                                \n                                \n                                        \n                                            onSpeakerToggle\n                                        \n                                \n                                \n                                        \n                                            speakerOn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        muted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        muted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEndCall\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onEndCall:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onMuteToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onMuteToggle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSpeakerToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onSpeakerToggle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speakerOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speakerOn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Colors } from \"../styles/commonStyles\";\n\ninterface DefaultCallControlsProps {\n  muted: boolean;\n  speakerOn: boolean;\n  onMuteToggle: () => void;\n  onSpeakerToggle: () => void;\n  onEndCall: () => void;\n}\n\nconst DefaultCallControls: React.FC = ({\n  muted,\n  speakerOn,\n  onMuteToggle,\n  onSpeakerToggle,\n  onEndCall,\n}) => {\n  return (\n    \n      {/* Mute Button */}\n      \n        \n      \n\n      {/* End Call Button */}\n      \n        \n      \n\n      {/* Speaker Button */}\n      \n        \n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    paddingHorizontal: 10,\n    marginBottom: 40,\n  },\n  controlButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 18,\n    borderRadius: 50,\n    backgroundColor: Colors.secondaryTransparent,\n    width: 80,\n    height: 80,\n  },\n  activeControlButton: {\n    backgroundColor: Colors.primaryTransparent,\n  },\n  disabledButton: {\n    backgroundColor: Colors.disabledBackground,\n  },\n  endCallButton: {\n    backgroundColor: Colors.danger,\n  },\n});\n\nexport default DefaultCallControls;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlatButtonProps.html":{"url":"interfaces/FlatButtonProps.html","title":"interface - FlatButtonProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FlatButtonProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ui/FlatButton.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            onPress\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onPress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onPress:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { TouchableOpacity, Text, StyleSheet } from \"react-native\";\nimport { Colors } from \"../../styles/commonStyles\";\n\ninterface FlatButtonProps {\n  title: string;\n  onPress: () => void;\n  color?: string;\n}\n\nconst FlatButton: React.FC = ({ title, onPress, color }) => {\n  return (\n    \n      \n        {title}\n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingVertical: 0,\n    paddingHorizontal: 10,\n    borderRadius: 4,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    color: Colors.textLight,\n    fontSize: 15,\n  },\n});\n\nexport default FlatButton;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlatTextInputProps.html":{"url":"interfaces/FlatTextInputProps.html","title":"interface - FlatTextInputProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FlatTextInputProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ui/FlatTextInput.tsx\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextInputProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isDarkMode\n                                        \n                                \n                                \n                                        \n                                            onChangeText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textAlign\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:     React.ReactNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     React.ReactNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDarkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDarkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChangeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onChangeText:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textAlign\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textAlign:     \"left\" | \"center\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"center\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useRef } from \"react\";\nimport {\n  View,\n  TextInput,\n  StyleSheet,\n  TextInputProps,\n  StyleProp,\n  ViewStyle,\n  DimensionValue,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport { Colors } from \"../../styles/commonStyles\";\n\ninterface FlatTextInputProps extends TextInputProps {\n  placeholder?: string;\n  value: string;\n  onChangeText: (text: string) => void;\n  icon?: React.ReactNode;\n  textAlign?: \"left\" | \"center\" | \"right\";\n  isDarkMode?: boolean;\n  width?: number | string;\n}\n\nconst FlatTextInput: React.FC = ({\n  placeholder = \"Enter text...\",\n  value,\n  onChangeText,\n  icon,\n  textAlign = \"left\",\n  isDarkMode = false,\n  width = \"100%\",\n  ...textInputProps\n}) => {\n  const textInputRef = useRef(null);\n\n  // Temporary fix for the dark mode text color\n  const textColor = isDarkMode ? Colors.textLight : Colors.ternary;\n  const containerStyle: StyleProp = {\n    ...styles.container,\n    width: width as DimensionValue | undefined,\n    backgroundColor: isDarkMode ? Colors.ternary : Colors.textLight,\n  };\n  const inputStyle = {\n    ...styles.input,\n    color: textColor,\n    textAlign,\n    paddingLeft: icon ? 35 : 0,\n    paddingRight: icon ? 35 : 0,\n  };\n\n  return (\n     textInputRef.current?.focus()}>\n      \n        {icon && {icon}}\n        \n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    height: 40,\n    marginVertical: 10,\n  },\n  icon: {\n    position: \"absolute\",\n    left: 13,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n  },\n});\n\nexport default FlatTextInput;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleAuthResponse.html":{"url":"interfaces/GoogleAuthResponse.html","title":"interface - GoogleAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GoogleAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/Auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleAuthResponse {\n    accessToken: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconButtonProps.html":{"url":"interfaces/IconButtonProps.html","title":"interface - IconButtonProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconButtonProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ui/IconButton.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            onPress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onPress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onPress:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:     ViewStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ViewStyle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { TouchableOpacity, StyleSheet, ViewStyle } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Colors } from \"../../styles/commonStyles\";\n\ninterface IconButtonProps {\n  name: string;\n  size?: number;\n  color?: string;\n  onPress: () => void;\n  style?: ViewStyle;\n}\n\nconst IconButton: React.FC = ({\n  name,\n  size = 32,\n  color = Colors.textLight,\n  onPress,\n  style,\n}) => {\n  return (\n    \n      \n    \n  );\n};\n\nexport default IconButton;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingCallScreenProps.html":{"url":"interfaces/IncomingCallScreenProps.html","title":"interface - IncomingCallScreenProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingCallScreenProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/IncomingCallScreen.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callData\n                                        \n                                \n                                \n                                        \n                                            onAccept\n                                        \n                                \n                                \n                                        \n                                            onReject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callData:         CallData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CallData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onAccept\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onAccept:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onReject:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { View, Text, StyleSheet, Image } from \"react-native\";\nimport DiamondBackground from \"../components/ui/DiamondBackground\";\nimport { Colors } from \"../styles/commonStyles\";\nimport Button from \"../components/ui/Button\";\nimport { CallData } from \"../types/commonTypes\";\n\ninterface IncomingCallScreenProps {\n  callData: CallData;\n  onAccept: () => void;\n  onReject: () => void;\n}\n\nconst IncomingCallScreen: React.FC = ({\n  callData,\n  onAccept,\n  onReject,\n}) => {\n  const { callPartner, callType } = callData;\n  return (\n    <>\n      \n      \n        \n          \n          Incoming {callType} call\n          {callPartner.name}\n        \n\n        \n          \n          \n        \n      \n    \n  );\n};\nexport default IncomingCallScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n  callInfoContainer: {\n    marginTop: 100,\n    alignItems: \"center\",\n    marginBottom: 40,\n  },\n  avatar: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginBottom: 20,\n  },\n  infoText: {\n    fontSize: 20,\n    color: Colors.textLight,\n  },\n  callPartnerName: {\n    fontSize: 48,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n  },\n  buttonsContainer: {\n    marginTop: 250,\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\",\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingCallScreenWrapperProps.html":{"url":"interfaces/IncomingCallScreenWrapperProps.html","title":"interface - IncomingCallScreenWrapperProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingCallScreenWrapperProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/IncomingCallScreenWrapper.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            route\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         RouteProp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouteProp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { useNavigation, RouteProp } from \"@react-navigation/native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { InteractionStackParamList } from \"../../App\";\nimport IncomingCallScreen from \"./IncomingCallScreen\";\nimport { updateCallStatus } from \"../services/callSessionService\";\n\ninterface IncomingCallScreenWrapperProps {\n  route: RouteProp;\n}\n\nconst IncomingCallScreenWrapper: React.FC = ({\n  route,\n}) => {\n  const navigation =\n    useNavigation>();\n  const { callData } = route.params;\n  const { callType, callSessionId } = callData;\n\n  const handleAccept = async () => {\n    await updateCallStatus(callSessionId, \"accepted\");\n    navigation.replace(callType === \"audio\" ? \"AudioCall\" : \"VideoCall\", {\n      callData: callData,\n    });\n  };\n\n  const handleReject = async () => {\n    await updateCallStatus(callSessionId, \"rejected\");\n    navigation.goBack();\n  };\n\n  return (\n    \n  );\n};\n\nexport default IncomingCallScreenWrapper;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fromUserId\n                                        \n                                \n                                \n                                        \n                                            fromUserName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            toUserId\n                                        \n                                \n                                \n                                        \n                                            toUserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fromUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromUserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromUserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromUserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toUserId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toUserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toUserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InviteFormProps.html":{"url":"interfaces/InviteFormProps.html","title":"interface - InviteFormProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InviteFormProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/InviteForm.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handleSendInvitation\n                                        \n                                \n                                \n                                        \n                                            invitationCode\n                                        \n                                \n                                \n                                        \n                                            setInvitationCode\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handleSendInvitation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handleSendInvitation:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setInvitationCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setInvitationCode:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Colors } from \"../styles/commonStyles\";\nimport FlatTextInput from \"./ui/FlatTextInput\";\nimport Button from \"./ui/Button\";\n\ninterface InviteFormProps {\n  invitationCode: string;\n  setInvitationCode: (code: string) => void;\n  handleSendInvitation: () => void;\n  status: string | null;\n}\n\nconst InviteForm: React.FC = ({\n  invitationCode,\n  setInvitationCode,\n  handleSendInvitation,\n  status,\n}) => {\n  return (\n    \n      Add New Friends\n\n      \n        \n        \n      \n\n      {status && {status}}\n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  newInviteContainer: {\n    position: \"absolute\",\n    top: 20,\n    left: 5,\n    right: 5,\n    padding: 10,\n    borderRadius: 10,\n    maxHeight: 200,\n    zIndex: 10,\n    backgroundColor: Colors.secondaryTransparent,\n    shadowColor: Colors.primary,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.5,\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  subHeader: {\n    alignSelf: \"flex-start\",\n    left: 20,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  status: {\n    color: Colors.textLight,\n    marginTop: 10,\n    marginBottom: 20,\n    textAlign: \"center\",\n  },\n});\n\nexport default InviteForm;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            readBy\n                                        \n                                \n                                \n                                        \n                                            senderId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readBy:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PendingInvitationsProps.html":{"url":"interfaces/PendingInvitationsProps.html","title":"interface - PendingInvitationsProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PendingInvitationsProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/PendingInvitations.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handleAcceptInvitation\n                                        \n                                \n                                \n                                        \n                                            handleRejectInvitation\n                                        \n                                \n                                \n                                        \n                                            invitations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handleAcceptInvitation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handleAcceptInvitation:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handleRejectInvitation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handleRejectInvitation:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitations:         Invitation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invitation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport ReactNative, { View, Text, FlatList, StyleSheet } from \"react-native\";\nimport { Colors } from \"../styles/commonStyles\";\nimport { Invitation } from \"../types/commonTypes\";\nimport FlatButton from \"./ui/FlatButton\";\n\ninterface PendingInvitationsProps {\n  invitations: Invitation[];\n  handleAcceptInvitation: (id: string, fromUserId: string) => void;\n  handleRejectInvitation: (id: string) => void;\n}\n\nconst PendingInvitations: React.FC = ({\n  invitations,\n  handleAcceptInvitation,\n  handleRejectInvitation,\n}) => {\n  const renderInvitation = ({ item }: { item: Invitation }) => (\n    \n      {item.fromUserName}\n      \n         handleAcceptInvitation(item.id, item.fromUserId)}\n        />\n         handleRejectInvitation(item.id)}\n        />\n      \n    \n  );\n\n  return (\n    \n      Pending Invitations\n      {invitations.length > 0 && (\n         item.id}\n          contentContainerStyle={styles.flatListContainer}\n        />\n      )}\n      {invitations.length === 0 && (\n        No pending invitations.\n      )}\n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    paddingHorizontal: 20,\n    marginTop: 20,\n  },\n  subHeader: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n    marginBottom: 15,\n  },\n  text: {\n    color: Colors.textLight,\n    textAlign: \"center\",\n  },\n  flatListContainer: {\n    paddingBottom: 20,\n  },\n  invitationItem: {\n    padding: 15,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderRadius: 10,\n    backgroundColor: Colors.secondaryTransparent,\n    alignItems: \"center\",\n    marginVertical: 5,\n    shadowColor: Colors.primary,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.5,\n  },\n  invitationText: {\n    color: Colors.textLight,\n    fontWeight: \"bold\",\n    left: 5,\n    flex: 1,\n  },\n  buttons: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n});\n\nexport default PendingInvitations;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchBarProps.html":{"url":"interfaces/SearchBarProps.html","title":"interface - SearchBarProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchBarProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ui/SearchBar.tsx\n        \n\n\n\n            \n                Extends\n            \n            \n                        TextInputProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            onChangeText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onChangeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onChangeText:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { TextInputProps } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Colors } from \"../../styles/commonStyles\";\nimport FlatTextInput from \"./FlatTextInput\";\n\ninterface SearchBarProps extends TextInputProps {\n  placeholder?: string;\n  value: string;\n  onChangeText: (text: string) => void;\n}\n\nconst SearchBar: React.FC = ({\n  placeholder = \"Search...\",\n  value,\n  onChangeText,\n  ...textInputProps\n}) => {\n  return (\n    }\n      textAlign=\"center\"\n      isDarkMode={true}\n      {...textInputProps}\n    />\n  );\n};\n\nexport default SearchBar;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentedControlProps.html":{"url":"interfaces/SegmentedControlProps.html","title":"interface - SegmentedControlProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentedControlProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ui/SegmentedControl.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            onTabChange\n                                        \n                                \n                                \n                                        \n                                            selectedTab\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onTabChange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onTabChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedTab:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useState } from \"react\";\nimport { View, TouchableOpacity, Text, StyleSheet } from \"react-native\";\nimport { Colors } from \"../../styles/commonStyles\";\n\ninterface SegmentedControlProps {\n  selectedTab: string;\n  onTabChange: (tab: \"All\" | \"Unread\") => void;\n}\n\nconst SegmentedControl: React.FC = ({\n  selectedTab,\n  onTabChange,\n}) => {\n  return (\n    \n       onTabChange(\"All\")}\n      >\n        All\n      \n       onTabChange(\"Unread\")}\n      >\n        Unread\n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  tabsContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    borderRadius: 10,\n    overflow: \"hidden\",\n  },\n  tab: {\n    flex: 1,\n    backgroundColor: Colors.ternary,\n    paddingVertical: 8,\n    alignItems: \"center\",\n  },\n  tabActive: {\n    backgroundColor: Colors.secondary,\n  },\n  tabText: {\n    color: Colors.textLight,\n    fontWeight: \"600\",\n  },\n});\n\nexport default SegmentedControl;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/commonTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            invitationCode\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\n\nexport interface UserData {\n  id: string;\n  name: string;\n  email: string;\n  picture: string;\n  invitationCode: string;\n}\n\nexport interface Contact {\n  contactId: string;\n  userId: string;\n  name: string;\n  avatar: string;\n  createdAt: Timestamp;\n}\n\nexport interface ContactSectionsType {\n  title: string;\n  index: number;\n  key: string;\n  data: Contact[];\n}\n\nexport interface Invitation {\n  id: string;\n  fromUserId: string;\n  fromUserName: string;\n  toUserId: string;\n  toUserName: string;\n  status: string;\n}\n\nexport interface ChatItem {\n  contactId: string;\n  contactName: string;\n  contactAvatar: string;\n  lastMessageText?: string;\n  lastMessageDate?: number;\n  unreadCount?: number;\n  createdAt?: number;\n}\n\nexport interface Message {\n  id: string;\n  senderId: string;\n  text?: string;\n  imageUrl?: string;\n  createdAt: Timestamp;\n  readBy?: string[];\n}\n\nexport interface CallData {\n  callPartner: Contact;\n  callType: \"audio\" | \"video\";\n  callSessionId: string;\n}\n\nexport type CallStatus = \"incoming\" | \"accepted\" | \"rejected\" | \"ended\";\n\nexport interface CallSession {\n  id: string;\n  callerId: string;\n  calleeId: string;\n  callType: \"audio\" | \"video\";\n  status: CallStatus;\n  createdAt: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDataContextProps.html":{"url":"interfaces/UserDataContextProps.html","title":"interface - UserDataContextProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDataContextProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/UserDataProvider.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clearUserData\n                                        \n                                \n                                \n                                        \n                                            invitationCode\n                                        \n                                \n                                \n                                        \n                                            loadUserData\n                                        \n                                \n                                \n                                        \n                                            setUserData\n                                        \n                                \n                                \n                                        \n                                            userEmail\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                                \n                                        \n                                            userPicture\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clearUserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clearUserData:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadUserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadUserData:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setUserData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setUserData:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userPicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createContext, useContext, useEffect, useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../services/firebaseConfig\";\nimport { UserData } from \"../types/commonTypes\";\nimport { generateInvitationCode } from \"../utils/utils\";\n\ninterface UserDataContextProps {\n  userId: string;\n  userName: string;\n  userEmail: string;\n  userPicture: string;\n  invitationCode: string;\n  setUserData: (data: UserData) => Promise;\n  clearUserData: () => Promise;\n  loadUserData: () => Promise;\n}\n\nconst UserDataContext = createContext(\n  undefined\n);\n\nexport function UserDataProvider({ children }: { children: React.ReactNode }) {\n  const [userId, setUserId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPicture, setUserPicture] = useState(\"\");\n  const [invitationCode, setInvitationCode] = useState(\"\");\n\n  const USER_DATA_KEY = \"@userData\";\n\n  const loadUserData = async () => {\n    try {\n      const storedUserData = await AsyncStorage.getItem(USER_DATA_KEY);\n      if (storedUserData) {\n        const parsedData: UserData = JSON.parse(storedUserData);\n        setUserId(parsedData.id);\n        setUserName(parsedData.name);\n        setUserEmail(parsedData.email);\n        setUserPicture(parsedData.picture);\n        setInvitationCode(parsedData.invitationCode);\n      }\n    } catch (error) {\n      console.error(\"Failed to load user data:\", error);\n    }\n  };\n\n  const setUserData = async (data: UserData) => {\n    try {\n      // Generate an invitation code if it doesn't exist\n      data.invitationCode = data.invitationCode || generateInvitationCode();\n\n      await saveUserToFirestore(data);\n      await AsyncStorage.setItem(USER_DATA_KEY, JSON.stringify(data));\n      setUserId(data.id);\n      setUserName(data.name);\n      setUserEmail(data.email);\n      setUserPicture(data.picture);\n      setInvitationCode(data.invitationCode);\n    } catch (error) {\n      console.error(\"Failed to save user data:\", error);\n    }\n  };\n\n  const clearUserData = async () => {\n    try {\n      await AsyncStorage.removeItem(USER_DATA_KEY);\n      setUserId(\"\");\n      setUserName(\"\");\n      setUserEmail(\"\");\n      setUserPicture(\"\");\n      setInvitationCode(\"\");\n    } catch (error) {\n      console.error(\"Failed to clear user data:\", error);\n    }\n  };\n\n  const saveUserToFirestore = async (user: UserData) => {\n    try {\n      const userDoc = doc(db, \"users\", user.id);\n      const userSnapshot = await getDoc(userDoc);\n\n      if (!userSnapshot.exists()) {\n        await setDoc(userDoc, {\n          name: user.name,\n          email: user.email,\n          profilePic: user.picture,\n          invitationCode: user.invitationCode,\n        });\n        console.log(\"User saved to Firestore.\");\n      }\n    } catch (error) {\n      throw new Error(\"Error saving user to Firestore:\" + error);\n    }\n  };\n\n  useEffect(() => {\n    loadUserData();\n  }, []);\n\n  const value: UserDataContextProps = {\n    userId,\n    userName,\n    userEmail,\n    userPicture,\n    invitationCode,\n    setUserData,\n    clearUserData,\n    loadUserData,\n  };\n\n  return (\n    \n      {children}\n    \n  );\n}\n\nexport function useUserData() {\n  const context = useContext(UserDataContext);\n  if (!context) {\n    throw new Error(\"useUserData must be used within a UserDataProvider\");\n  }\n  return context;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfoProps.html":{"url":"interfaces/UserInfoProps.html","title":"interface - UserInfoProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfoProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/ui/UserInfo.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            onSignOut\n                                        \n                                \n                                \n                                        \n                                            userInfo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onSignOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onSignOut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userInfo:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { View, Text, Image, Button, StyleSheet } from \"react-native\";\nimport { UserData } from \"../../types/commonTypes\";\n\ninterface UserInfoProps {\n  userInfo: UserData;\n  onSignOut: () => void;\n}\n\nconst UserInfo: React.FC = ({ userInfo, onSignOut }) => {\n  return (\n    \n      \n      Witaj, {userInfo.name}!\n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n  },\n  profilePic: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 10,\n  },\n});\n\nexport default UserInfo;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoCallControlsProps.html":{"url":"interfaces/VideoCallControlsProps.html","title":"interface - VideoCallControlsProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoCallControlsProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/VideoCallControls.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cameraOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onCameraToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onSwapCamera\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cameraOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cameraOn:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onCameraToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onCameraToggle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSwapCamera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onSwapCamera:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Colors } from \"../styles/commonStyles\";\n\ninterface VideoCallControlsProps {\n  cameraOn?: boolean;\n  onCameraToggle?: () => void;\n  onSwapCamera?: () => void;\n}\n\nconst VideoCallControls: React.FC = ({\n  cameraOn,\n  onCameraToggle,\n  onSwapCamera,\n}) => {\n  return (\n    \n      \n        {onCameraToggle && (\n          \n            \n          \n        )}\n\n        {onSwapCamera && (\n          \n            \n          \n        )}\n      \n    \n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    paddingHorizontal: 20,\n  },\n  row: {\n    flexDirection: \"row\",\n    gap: 11,\n  },\n  controlButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 18,\n    borderRadius: 10,\n    backgroundColor: Colors.secondaryTransparent,\n    width: 80,\n    height: 65,\n  },\n  activeControlButton: {\n    backgroundColor: Colors.secondaryTransparent,\n  },\n  disabledButton: {\n    backgroundColor: Colors.disabledBackground,\n  },\n});\n\nexport default VideoCallControls;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoCallScreenProps.html":{"url":"interfaces/VideoCallScreenProps.html","title":"interface - VideoCallScreenProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoCallScreenProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/VideoCallScreen.tsx\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            route\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         RouteProp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouteProp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import React, { useEffect, useState } from \"react\";\nimport { View, Text, StyleSheet, Image, Alert } from \"react-native\";\nimport { RouteProp, useNavigation } from \"@react-navigation/native\";\nimport { updateCallStatus } from \"../services/callSessionService\";\nimport useAgora from \"../hooks/useAgora\";\nimport { Colors } from \"../styles/commonStyles\";\nimport DiamondBackground from \"../components/ui/DiamondBackground\";\nimport { formatCallDuration } from \"../utils/utils\";\nimport InactiveCallOverlay from \"../components/InactiveCallOverlay\";\nimport VideoCallControls from \"../components/VideoCallControls\";\nimport DefaultCallControls from \"../components/DefaultCallControls\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { InteractionStackParamList } from \"../../App\";\nimport { RtcSurfaceView } from \"react-native-agora\";\n\ninterface VideoCallScreenProps {\n  route: RouteProp;\n}\n\nconst VideoCallScreen: React.FC = ({ route }) => {\n  const navigation = useNavigation();\n  const { callData } = route.params;\n  const { callPartner, callSessionId } = callData;\n\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [callDuration, setCallDuration] = useState(0);\n  const [muted, setMuted] = useState(false);\n  const [speakerOn, setSpeakerOn] = useState(false);\n  const [cameraOn, setCameraOn] = useState(true);\n\n  const {\n    isJoined,\n    remoteUid,\n    toggleMute,\n    setSpeakerphoneOn,\n    toggleCamera,\n    switchCamera,\n    leaveChannel,\n  } = useAgora();\n\n  useEffect(() => {\n    const unsubscribe = updateCallStatus(callSessionId, \"joined\");\n    return () => {\n      unsubscribe.then(() => {\n        updateCallStatus(callSessionId, \"ended\");\n        setIsCallActive(false);\n        Alert.alert(\"Information\", \"The other party has ended the call.\");\n        setTimeout(() => navigation.goBack(), 2000);\n      });\n    };\n  }, [callSessionId]);\n\n  useEffect(() => {\n    isJoined && setIsCallActive(true);\n  }, [isJoined]);\n\n  useEffect(() => {\n    if (!isCallActive) {\n      leaveChannel();\n    }\n  }, [isCallActive, leaveChannel]);\n\n  useEffect(() => {\n    let timerId: NodeJS.Timeout;\n    if (isCallActive) {\n      timerId = setInterval(() => setCallDuration((prev) => prev + 1), 1000);\n    }\n    return () => clearInterval(timerId);\n  }, [isCallActive]);\n\n  const handleEndCall = async () => {\n    await updateCallStatus(callSessionId, \"ended\");\n    leaveChannel();\n    navigation.goBack();\n  };\n\n  const handleMuteToggle = () => {\n    toggleMute(!muted);\n    setMuted((muted) => !muted);\n  };\n\n  const handleSpeakerToggle = () => {\n    setSpeakerphoneOn(!speakerOn);\n    setSpeakerOn((speakerOn) => !speakerOn);\n  };\n\n  function handleCameraToggle() {\n    toggleCamera(!cameraOn);\n    setCameraOn((cameraOn) => !cameraOn);\n  }\n\n  function handleSwapCamera() {\n    switchCamera();\n  }\n\n  return (\n    <>\n      \n      \n        {!isCallActive && }\n\n        \n          \n        \n\n        {callPartner.name}\n        \n          {formatCallDuration(callDuration)}\n        \n\n        \n          {cameraOn ? (\n            \n          ) : (\n            <>\n              \n              Camera Off\n            \n          )}\n        \n\n        \n          \n            {remoteUid.at(0) !== 0 ? ( // TODO: tmp condition for remoteUid\n              \n            ) : (\n              <>\n                \n                \n                  {callPartner.name} - Remote Video\n                \n              \n            )}\n          \n        \n\n        \n          \n        \n      \n    \n  );\n};\n\nexport default VideoCallScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n    paddingTop: 50,\n    position: \"relative\",\n  },\n  videoControlsContainer: {\n    position: \"absolute\",\n    top: 60,\n    left: 20,\n    zIndex: 1,\n  },\n  callPartnerName: {\n    position: \"absolute\",\n    top: 140,\n    left: 45,\n    right: 0,\n    zIndex: 1,\n    fontSize: 26,\n    fontWeight: \"bold\",\n    color: Colors.textLight,\n  },\n  calleeVideoView: {\n    position: \"absolute\",\n    top: 60,\n    right: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primaryTransparent,\n    borderRadius: 10,\n    height: 200,\n    width: 150,\n    zIndex: 10,\n  },\n  videoCallPartnerContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    width: \"100%\",\n    paddingHorizontal: 20,\n    marginBottom: 30,\n    position: \"relative\",\n  },\n  callPartnerVideoView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 10,\n    backgroundColor: Colors.secondaryTransparent,\n    borderRadius: 10,\n    height: 500,\n  },\n  cameraStatus: {\n    textAlign: \"center\",\n    fontSize: 15,\n    color: Colors.textLight,\n    marginTop: 15,\n  },\n  avatar: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginTop: 10,\n    borderWidth: 3,\n    borderColor: Colors.primary,\n  },\n  callDuration: {\n    position: \"absolute\",\n    top: 315,\n    right: -25,\n    transform: [{ rotate: \"90deg\" }],\n    zIndex: 2,\n    fontSize: 20,\n    fontFamily: \"monospace\",\n    color: Colors.textDimmed,\n    width: 120,\n    textAlign: \"left\",\n  },\n  defaultControlsContainer: {\n    position: \"absolute\",\n    bottom: 15,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 30,\n    zIndex: 1,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        App.tsx\n            \n            function\n            Navigation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            function\n            Root\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            App\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            AppNavigator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            AuthenticatedStack\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            AuthenticatedStackNavigator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            AuthStack\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            AuthStackNavigator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            ChatsStack\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            ChatsStackNavigator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            InteractionStack\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            InteractionStackNavigator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            variable\n            Tab\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            type alias\n            AuthenticatedStackParamList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            type alias\n            AuthenticatedStackProp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            type alias\n            BottomTabParamList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            type alias\n            ChatsStackParamList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            type alias\n            InteractionStackParamList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        App.tsx\n            \n            type alias\n            InteractionStackProp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ContactSection.tsx\n            \n            interface\n            ContactSectionProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            function\n            ContactSection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            function\n            ContactsListHeader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            function\n            ContactsListItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            function\n            generateContactSections\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            ALPHABET_INDICATOR_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            AlphabetLetter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            AVATAR_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            HIT_SLOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            ITEM_HEIGHT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            ITEM_SPACING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            KNOB_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            SECTION_HEADER_HEIGHT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ContactSection.tsx\n            \n            type alias\n            AlphabetLetterProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/DefaultCallControls.tsx\n            \n            interface\n            DefaultCallControlsProps\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/components/DefaultCallControls.tsx\n            \n            variable\n            DefaultCallControls\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/DefaultCallControls.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/InactiveCallOverlay.tsx\n            \n            variable\n            InactiveCallOverlay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/InactiveCallOverlay.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/InviteForm.tsx\n            \n            interface\n            InviteFormProps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/components/InviteForm.tsx\n            \n            variable\n            InviteForm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/InviteForm.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/PendingInvitations.tsx\n            \n            interface\n            PendingInvitationsProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/components/PendingInvitations.tsx\n            \n            variable\n            PendingInvitations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/PendingInvitations.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/VideoCallControls.tsx\n            \n            interface\n            VideoCallControlsProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/components/VideoCallControls.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/VideoCallControls.tsx\n            \n            variable\n            VideoCallControls\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ui/Button.tsx\n            \n            interface\n            ButtonProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/components/ui/Button.tsx\n            \n            variable\n            Button\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/Button.tsx\n            \n            variable\n            DEFAULT_HIGHT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/Button.tsx\n            \n            variable\n            DEFAULT_WIDTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/Button.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/DiamondBackground.tsx\n            \n            variable\n            DiamondBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/DiamondBackground.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ui/FlatButton.tsx\n            \n            interface\n            FlatButtonProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/components/ui/FlatButton.tsx\n            \n            variable\n            FlatButton\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/FlatButton.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ui/FlatTextInput.tsx\n            \n            interface\n            FlatTextInputProps\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/components/ui/FlatTextInput.tsx\n            \n            variable\n            FlatTextInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/FlatTextInput.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ui/IconButton.tsx\n            \n            interface\n            IconButtonProps\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/components/ui/IconButton.tsx\n            \n            variable\n            IconButton\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ui/SearchBar.tsx\n            \n            interface\n            SearchBarProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/components/ui/SearchBar.tsx\n            \n            variable\n            SearchBar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ui/SegmentedControl.tsx\n            \n            interface\n            SegmentedControlProps\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/components/ui/SegmentedControl.tsx\n            \n            variable\n            SegmentedControl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/SegmentedControl.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/ui/UserInfo.tsx\n            \n            interface\n            UserInfoProps\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/components/ui/UserInfo.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/components/ui/UserInfo.tsx\n            \n            variable\n            UserInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/hooks/useAgora.tsx\n            \n            interface\n            AgoraConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/hooks/useAgora.tsx\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/hooks/useAgora.tsx\n            \n            variable\n            useAgora\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/hooks/useChatMessages.tsx\n            \n            variable\n            useChatMessages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/authGateway.ts\n            \n            variable\n            fetchUserData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/callSessionService.ts\n            \n            variable\n            fetchCallerData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/callSessionService.ts\n            \n            variable\n            setupCallListener\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/callSessionService.ts\n            \n            variable\n            subscribeToCallSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/callSessionService.ts\n            \n            variable\n            updateCallStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/chatService.ts\n            \n            variable\n            fetchChats\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/chatService.ts\n            \n            variable\n            fetchMessagesAndListen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/chatService.ts\n            \n            variable\n            getCallSessionId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/chatService.ts\n            \n            variable\n            markMessagesAsRead\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/chatService.ts\n            \n            variable\n            sendMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/contactService.ts\n            \n            variable\n            acceptInvitation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/contactService.ts\n            \n            variable\n            fetchContacts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/contactService.ts\n            \n            variable\n            fetchInvitations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/contactService.ts\n            \n            variable\n            rejectInvitation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/contactService.ts\n            \n            variable\n            sendInvitation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/firebaseConfig.ts\n            \n            function\n            getReactNativePersistence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/firebaseConfig.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/firebaseConfig.ts\n            \n            variable\n            auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/firebaseConfig.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/firebaseConfig.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/firebaseConfig.ts\n            \n            variable\n            storage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/friendService.ts\n            \n            variable\n            checkInvitationStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/services/friendService.ts\n            \n            variable\n            sendInvitation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/store/AuthProvider.tsx\n            \n            interface\n            AuthContextProps\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/store/AuthProvider.tsx\n            \n            function\n            AuthProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/store/AuthProvider.tsx\n            \n            function\n            useAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/store/AuthProvider.tsx\n            \n            variable\n            AuthContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/store/CallSessionProvider.tsx\n            \n            interface\n            CallSessionProps\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/store/CallSessionProvider.tsx\n            \n            function\n            CallSessionProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/store/CallSessionProvider.tsx\n            \n            function\n            useCallSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/store/CallSessionProvider.tsx\n            \n            variable\n            CallSessionContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/store/UserDataProvider.tsx\n            \n            interface\n            UserDataContextProps\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/store/UserDataProvider.tsx\n            \n            function\n            UserDataProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/store/UserDataProvider.tsx\n            \n            function\n            useUserData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/store/UserDataProvider.tsx\n            \n            variable\n            UserDataContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/styles/commonStyles.ts\n            \n            variable\n            Colors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/styles/commonStyles.ts\n            \n            variable\n            commonStyles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/tests/mockData.ts\n            \n            variable\n            mockContacts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/tests/mockData.ts\n            \n            variable\n            mockInvitations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/Auth.ts\n            \n            interface\n            GoogleAuthResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            CallData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            CallSession\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            ChatItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            ContactSectionsType\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            Invitation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/commonTypes.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/types/commonTypes.ts\n            \n            type alias\n            CallStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/utils.tsx\n            \n            variable\n            alphabet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/utils.tsx\n            \n            variable\n            formatCallDuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/utils.tsx\n            \n            variable\n            generateInvitationCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/utils.tsx\n            \n            variable\n            randomAvatar\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/AudioCallScreen.tsx\n            \n            interface\n            AudioCallScreenProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/views/AudioCallScreen.tsx\n            \n            variable\n            AudioCallScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/AudioCallScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/CallScreen.tsx\n            \n            variable\n            App\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/CallScreen.tsx\n            \n            variable\n            appId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/CallScreen.tsx\n            \n            variable\n            channelName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/CallScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/CallScreen.tsx\n            \n            variable\n            token\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/CallScreen.tsx\n            \n            variable\n            uid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/ChatDetails.tsx\n            \n            interface\n            ChatHeaderProps\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/views/ChatDetails.tsx\n            \n            interface\n            ChatHeaderProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/views/ChatDetails.tsx\n            \n            interface\n            ChatMessageItemProps\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/views/ChatDetails.tsx\n            \n            variable\n            ChatDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatDetails.tsx\n            \n            variable\n            ChatHeader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatDetails.tsx\n            \n            variable\n            ChatMessageItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatDetails.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatDetails.tsx\n            \n            type alias\n            ChatDetailsRouteProp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatsScreen.tsx\n            \n            variable\n            ChatIListItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatsScreen.tsx\n            \n            variable\n            ChatsScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatsScreen.tsx\n            \n            variable\n            filterChatsData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ChatsScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ContactsScreen.tsx\n            \n            variable\n            ContactsScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ContactsScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ContactsScreen.tsx\n            \n            type alias\n            BottomTabParamList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/ContactsScreen.tsx\n            \n            type alias\n            ContactsScreenProps\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/IncomingCallScreen.tsx\n            \n            interface\n            IncomingCallScreenProps\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/views/IncomingCallScreen.tsx\n            \n            variable\n            IncomingCallScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/IncomingCallScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/IncomingCallScreenWrapper.tsx\n            \n            interface\n            IncomingCallScreenWrapperProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/views/IncomingCallScreenWrapper.tsx\n            \n            variable\n            IncomingCallScreenWrapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/InvitationsScreen.tsx\n            \n            variable\n            InvitationsScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/InvitationsScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/LoadingScreen.tsx\n            \n            variable\n            LoadingScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/LoadingScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/LoginScreen.tsx\n            \n            function\n            LoginScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/LoginScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/SettingsScreen.tsx\n            \n            variable\n            SettingsScreen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/SettingsScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/VideoCallScreen.tsx\n            \n            interface\n            VideoCallScreenProps\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/views/VideoCallScreen.tsx\n            \n            variable\n            styles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/views/VideoCallScreen.tsx\n            \n            variable\n            VideoCallScreen\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @expo/metro-runtime : ~4.0.0\n        \n            @react-native-async-storage/async-storage : ^2.1.0\n        \n            @react-native-picker/picker : ^2.10.2\n        \n            @react-navigation/bottom-tabs : ^7.2.0\n        \n            @react-navigation/native : ^7.0.14\n        \n            @react-navigation/stack : ^7.1.1\n        \n            babel-preset-expo : ^12.0.4\n        \n            expo : ^52.0.25\n        \n            expo-auth-session : ~6.0.1\n        \n            expo-dev-client : ~5.0.8\n        \n            expo-linear-gradient : ~14.0.1\n        \n            expo-modules-core : ^2.1.2\n        \n            expo-status-bar : ~2.0.0\n        \n            firebase : ^11.1.0\n        \n            nativewind : ^4.1.23\n        \n            react : 18.3.1\n        \n            react-dom : 18.3.1\n        \n            react-native : 0.76.5\n        \n            react-native-agora : ^4.5.1\n        \n            react-native-dotenv : ^3.4.11\n        \n            react-native-gesture-handler : ^2.21.2\n        \n            react-native-get-item-layout-section-list : ^0.1.0\n        \n            react-native-reanimated : ^3.16.6\n        \n            react-native-safe-area-context : ^5.0.0\n        \n            react-native-screens : ^4.4.0\n        \n            react-native-section-list-get-item-layout : ^2.2.3\n        \n            react-native-svg : ^15.8.0\n        \n            react-native-vector-icons : ^10.2.0\n        \n            react-native-web : ~0.19.13\n        \n            undefined : expo-auth-session/providers/google\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthProvider   (src/.../AuthProvider.tsx)\n                        \n                        \n                            CallSessionProvider   (src/.../CallSessionProvider.tsx)\n                        \n                        \n                            ContactSection   (src/.../ContactSection.tsx)\n                        \n                        \n                            ContactsListHeader   (src/.../ContactSection.tsx)\n                        \n                        \n                            ContactsListItem   (src/.../ContactSection.tsx)\n                        \n                        \n                            generateContactSections   (src/.../ContactSection.tsx)\n                        \n                        \n                            getReactNativePersistence   (src/.../firebaseConfig.ts)\n                        \n                        \n                            LoginScreen   (src/.../LoginScreen.tsx)\n                        \n                        \n                            Navigation   (App.tsx)\n                        \n                        \n                            Root   (App.tsx)\n                        \n                        \n                            useAuth   (src/.../AuthProvider.tsx)\n                        \n                        \n                            useCallSession   (src/.../CallSessionProvider.tsx)\n                        \n                        \n                            UserDataProvider   (src/.../UserDataProvider.tsx)\n                        \n                        \n                            useUserData   (src/.../UserDataProvider.tsx)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/store/AuthProvider.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthProvider\n                        \n                    \n                \n            \n            \n                \nAuthProvider(__namedParameters: {children: React.ReactNode})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                children\n                                            \n                                                        React.ReactNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useAuth\n                        \n                    \n                \n            \n            \n                \nuseAuth()\n                \n            \n\n\n\n\n        \n    \n    src/store/CallSessionProvider.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        CallSessionProvider\n                        \n                    \n                \n            \n            \n                \nCallSessionProvider(__namedParameters: {children: React.ReactNode})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                children\n                                            \n                                                        React.ReactNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useCallSession\n                        \n                    \n                \n            \n            \n                \nuseCallSession()\n                \n            \n\n\n\n\n        \n    \n    src/components/ContactSection.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        ContactSection\n                        \n                    \n                \n            \n            \n                \nContactSection(__namedParameters: {contactsData: ContactSectionProps})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contactsData\n                                            \n                                                            ContactSectionProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactsListHeader\n                        \n                    \n                \n            \n            \n                \nContactsListHeader(__namedParameters: {title: string})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ContactsListItem\n                        \n                    \n                \n            \n            \n                \nContactsListItem(__namedParameters: {item: Contact})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateContactSections\n                        \n                    \n                \n            \n            \n                \ngenerateContactSections(contacts)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                contacts\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ContactSectionsType[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/services/firebaseConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getReactNativePersistence\n                        \n                    \n                \n            \n            \n                \ngetReactNativePersistence(storage: ReactNativeAsyncStorage)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                storage\n                                            \n                                                        ReactNativeAsyncStorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Persistence\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/views/LoginScreen.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        LoginScreen\n                        \n                    \n                \n            \n            \n                \nLoginScreen()\n                \n            \n\n\n\n\n        \n    \n    App.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        Navigation\n                        \n                    \n                \n            \n            \n                \nNavigation()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Root\n                        \n                    \n                \n            \n            \n                \nRoot()\n                \n            \n\n\n\n\n        \n    \n    src/store/UserDataProvider.tsx\n    \n        \n        \n            \n                \n                    \n                    \n                        UserDataProvider\n                        \n                    \n                \n            \n            \n                \nUserDataProvider(__namedParameters: {children: React.ReactNode})\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                children\n                                            \n                                                        React.ReactNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useUserData\n                        \n                    \n                \n            \n            \n                \nuseUserData()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            License : 0BSD\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlphabetLetterProps   (src/.../ContactSection.tsx)\n                        \n                        \n                            AuthenticatedStackParamList   (App.tsx)\n                        \n                        \n                            AuthenticatedStackProp   (App.tsx)\n                        \n                        \n                            BottomTabParamList   (App.tsx)\n                        \n                        \n                            BottomTabParamList   (src/.../ContactsScreen.tsx)\n                        \n                        \n                            CallStatus   (src/.../commonTypes.ts)\n                        \n                        \n                            ChatDetailsRouteProp   (src/.../ChatDetails.tsx)\n                        \n                        \n                            ChatsStackParamList   (App.tsx)\n                        \n                        \n                            ContactsScreenProps   (src/.../ContactsScreen.tsx)\n                        \n                        \n                            InteractionStackParamList   (App.tsx)\n                        \n                        \n                            InteractionStackProp   (App.tsx)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/ContactSection.tsx\n    \n    \n        \n            \n                \n                    \n                    AlphabetLetterProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    App.tsx\n    \n    \n        \n            \n                \n                    \n                    AuthenticatedStackParamList\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedStackProp\n                \n            \n            \n                \n                            StackNavigationProp\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    BottomTabParamList\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ChatsStackParamList\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InteractionStackParamList\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InteractionStackProp\n                \n            \n            \n                \n                            StackNavigationProp\n\n                \n            \n        \n    \n    src/views/ContactsScreen.tsx\n    \n    \n        \n            \n                \n                    \n                    BottomTabParamList\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ContactsScreenProps\n                \n            \n            \n                \n                            BottomTabScreenProps\n\n                \n            \n        \n    \n    src/types/commonTypes.ts\n    \n    \n        \n            \n                \n                    \n                    CallStatus\n                \n            \n            \n                \n                        \"incoming\" | \"accepted\" | \"rejected\" | \"ended\"\n\n                \n            \n        \n    \n    src/views/ChatDetails.tsx\n    \n    \n        \n            \n                \n                    \n                    ChatDetailsRouteProp\n                \n            \n            \n                \n                            RouteProp\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
